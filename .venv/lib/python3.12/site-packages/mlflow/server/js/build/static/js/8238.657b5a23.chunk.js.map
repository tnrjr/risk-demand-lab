{"version":3,"file":"static/js/8238.657b5a23.chunk.js","mappings":"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","sources":["experiment-tracking/components/ExperimentSourceTypeIcon.tsx","shared/web-shared/copy/useCopyController.tsx","shared/web-shared/copy/CopyActionButton.tsx","experiment-tracking/components/experiment-page/components/runs/cells/SourceCellRenderer.tsx","shared/web-shared/snippet/theme/databricks-duotone-dark.ts","shared/web-shared/snippet/theme/databricks-light.ts","shared/web-shared/snippet/actions/SnippetActionButton.tsx","shared/web-shared/snippet/actions/SnippetCopyAction.tsx","shared/web-shared/snippet/index.tsx","common/utils/LocalStorageUtils.ts","shared/web-shared/hooks/useMediaQuery.ts","shared/web-shared/hooks/useResizeObserver.tsx"],"sourcesContent":["import { FileCodeIcon, FolderBranchIcon, NotebookIcon, WorkflowsIcon } from '@databricks/design-system';\nimport { SourceType } from '../sdk/MlflowEnums';\n\n/**\n * Displays an icon corresponding to the source type of an experiment run.\n */\nexport const ExperimentSourceTypeIcon = ({\n  sourceType,\n  className,\n}: {\n  sourceType: SourceType | string;\n  className?: string;\n}) => {\n  if (sourceType === SourceType.NOTEBOOK) {\n    return <NotebookIcon className={className} />;\n  } else if (sourceType === SourceType.LOCAL) {\n    return <FileCodeIcon className={className} />;\n  } else if (sourceType === SourceType.PROJECT) {\n    return <FolderBranchIcon className={className} />;\n  } else if (sourceType === SourceType.JOB) {\n    return <WorkflowsIcon className={className} />;\n  }\n  return null;\n};\n","import type { ReactElement } from 'react';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useClipboard } from 'use-clipboard-copy';\n\nimport { CheckIcon, CopyIcon } from '@databricks/design-system';\nimport { useIntl } from '@databricks/i18n';\n\nexport interface CopyController {\n  actionIcon: ReactElement;\n  tooltipMessage: string;\n  copy: () => void;\n  copied: boolean;\n  ariaLabel: string;\n  tooltipOpen: boolean;\n  handleTooltipOpenChange: (open: boolean) => void;\n}\n\n/**\n * Utility hook that is internal to web-shared, use: `Copyable` or `CopyActionButton`\n *  or if it's a `CodeSnippet`, `SnippetCopyAction`\n */\nexport function useCopyController(text: string, copyTooltip?: string, onCopy?: () => void): CopyController {\n  const intl = useIntl();\n\n  const copyMessage = copyTooltip\n    ? copyTooltip\n    : intl.formatMessage({\n        defaultMessage: 'Copy',\n        description: 'Tooltip message displayed on copy action',\n      });\n\n  const copiedMessage = intl.formatMessage({\n    defaultMessage: 'Copied',\n    description: 'Tooltip message displayed on copy action after it has been clicked',\n  });\n\n  const clipboard = useClipboard();\n  const copiedTimerIdRef = useRef<number>();\n  const [copied, setCopied] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    return () => {\n      window.clearTimeout(copiedTimerIdRef.current);\n    };\n  }, []);\n\n  const copy = () => {\n    clipboard.copy(text);\n    window.clearTimeout(copiedTimerIdRef.current);\n    setCopied(true);\n    onCopy?.();\n    copiedTimerIdRef.current = window.setTimeout(() => {\n      setCopied(false);\n    }, 3000);\n  };\n\n  return {\n    actionIcon: copied ? <CheckIcon /> : <CopyIcon />,\n    tooltipMessage: copied ? copiedMessage : copyMessage,\n    copy,\n    copied,\n    ariaLabel: copyMessage,\n    tooltipOpen: open || copied,\n    handleTooltipOpenChange: setOpen,\n  };\n}\n","import React from 'react';\n\nimport type { ButtonProps, TooltipProps } from '@databricks/design-system';\nimport { Button, Tooltip } from '@databricks/design-system';\n\nimport { useCopyController } from './useCopyController';\n\nexport interface CopyActionButtonProps {\n  buttonProps?: Partial<ButtonProps>;\n  componentId?: string;\n  copyText: string;\n  copyTooltip?: string;\n  isInsideInputGroup?: boolean;\n  onCopy?: () => void;\n  tooltipProps?: Partial<TooltipProps>;\n}\n\nexport function CopyActionButton({\n  buttonProps,\n  componentId,\n  copyText,\n  copyTooltip,\n  isInsideInputGroup = false,\n  onCopy,\n  tooltipProps,\n}: CopyActionButtonProps) {\n  const { actionIcon, copy, handleTooltipOpenChange, tooltipOpen, tooltipMessage } = useCopyController(\n    copyText,\n    copyTooltip,\n    onCopy,\n  );\n\n  const button = (\n    <Button\n      aria-label={tooltipMessage}\n      componentId={componentId ?? 'codegen_web-shared_src_copy_copyactionbutton.tsx_17'}\n      icon={actionIcon}\n      onClick={copy}\n      size=\"small\"\n      {...buttonProps}\n    />\n  );\n\n  const inputGroupButton = (\n    <Button\n      aria-label={tooltipMessage}\n      componentId={componentId ?? 'codegen_web-shared_src_copy_copyactionbutton.tsx_17'}\n      onClick={copy}\n      {...buttonProps}\n    >\n      {actionIcon}\n    </Button>\n  );\n\n  return (\n    <Tooltip\n      componentId={\n        componentId ? `${componentId}-tooltip` : 'codegen_web-shared_src_copy_copyactionbutton.tsx_17-tooltip'\n      }\n      content={tooltipMessage}\n      onOpenChange={handleTooltipOpenChange}\n      open={tooltipOpen}\n      {...tooltipProps}\n    >\n      {isInsideInputGroup ? inputGroupButton : button}\n    </Tooltip>\n  );\n}\n","import React from 'react';\nimport Utils from '../../../../../../common/utils/Utils';\nimport { RunRowType } from '../../../utils/experimentPage.row-types';\nimport { useDesignSystemTheme } from '@databricks/design-system';\nimport { ExperimentSourceTypeIcon } from '../../../../ExperimentSourceTypeIcon';\n\nexport const SourceCellRenderer = React.memo(({ value: tags }: { value: RunRowType['tags'] }) => {\n  const { theme } = useDesignSystemTheme();\n  if (!tags) {\n    return <>-</>;\n  }\n  const sourceType = tags[Utils.sourceTypeTag]?.value || '';\n\n  const sourceLink = Utils.renderSource(tags || {}, undefined, undefined);\n  return sourceLink ? (\n    <div css={{ display: 'flex', gap: theme.spacing.xs, alignItems: 'center' }}>\n      <ExperimentSourceTypeIcon sourceType={sourceType} css={{ color: theme.colors.textSecondary }} />\n      <span css={{ overflow: 'hidden', textOverflow: 'ellipsis' }}>{sourceLink}</span>\n    </div>\n  ) : (\n    <>-</>\n  );\n});\n","/**\n * Adapted from `duotone-dark`\n * Ref: https://github.com/react-syntax-highlighter/react-syntax-highlighter/blob/b2457268891948f7005ccf539a70c000f0695bde/src/styles/prism/duotone-dark.js\n */\n\nconst databricksDuotoneDarkTheme = {\n  'code[class*=\"language-\"]': {\n    fontFamily:\n      'Consolas, Menlo, Monaco, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", \"Nimbus Mono L\", \"Courier New\", Courier, monospace',\n    fontSize: '14px',\n    lineHeight: '1.375',\n    direction: 'ltr',\n    textAlign: 'left',\n    whiteSpace: 'pre',\n    wordSpacing: 'normal',\n    wordBreak: 'normal',\n    MozTabSize: '4',\n    OTabSize: '4',\n    tabSize: '4',\n    WebkitHyphens: 'none',\n    MozHyphens: 'none',\n    msHyphens: 'none',\n    hyphens: 'none',\n    background: '#2a2734',\n    color: '#5DFAFC', // D\n  },\n  'pre[class*=\"language-\"]': {\n    fontFamily:\n      'Consolas, Menlo, Monaco, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", \"Nimbus Mono L\", \"Courier New\", Courier, monospace',\n    fontSize: '14px',\n    lineHeight: '1.375',\n    direction: 'ltr',\n    textAlign: 'left',\n    whiteSpace: 'pre',\n    wordSpacing: 'normal',\n    wordBreak: 'normal',\n    MozTabSize: '4',\n    OTabSize: '4',\n    tabSize: '4',\n    WebkitHyphens: 'none',\n    MozHyphens: 'none',\n    msHyphens: 'none',\n    hyphens: 'none',\n    background: '#2a2734',\n    color: '#5DFAFC', // D\n    padding: '1em',\n    margin: '.5em 0',\n    overflow: 'auto',\n  },\n  'pre > code[class*=\"language-\"]': {\n    fontSize: '1em',\n  },\n  'pre[class*=\"language-\"]::-moz-selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'pre[class*=\"language-\"] ::-moz-selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'code[class*=\"language-\"]::-moz-selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'code[class*=\"language-\"] ::-moz-selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'pre[class*=\"language-\"]::selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'pre[class*=\"language-\"] ::selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'code[class*=\"language-\"]::selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'code[class*=\"language-\"] ::selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  ':not(pre) > code[class*=\"language-\"]': {\n    padding: '.1em',\n    borderRadius: '.3em',\n  },\n  comment: {\n    color: '#6c6783',\n  },\n  prolog: {\n    color: '#6c6783',\n  },\n  doctype: {\n    color: '#6c6783',\n  },\n  cdata: {\n    color: '#6c6783',\n  },\n  punctuation: {\n    color: '#6c6783',\n  },\n  namespace: {\n    Opacity: '.7',\n  },\n  tag: {\n    color: '#3AACE2', // D\n  },\n  operator: {\n    color: '#3AACE2', // D\n  },\n  number: {\n    color: '#3AACE2', // D\n  },\n  property: {\n    color: '#5DFAFC', // D\n  },\n  function: {\n    color: '#5DFAFC', // D\n  },\n  'tag-id': {\n    color: '#eeebff',\n  },\n  selector: {\n    color: '#eeebff',\n  },\n  'atrule-id': {\n    color: '#eeebff',\n  },\n  'code.language-javascript': {\n    color: '#c4b9fe',\n  },\n  'attr-name': {\n    color: '#c4b9fe',\n  },\n  'code.language-css': {\n    color: '#ffffff', // D\n  },\n  'code.language-scss': {\n    color: '#ffffff', // D\n  },\n  boolean: {\n    color: '#ffffff', // D\n  },\n  string: {\n    color: '#ffffff', // D\n  },\n  entity: {\n    color: '#ffffff', // D\n    cursor: 'help',\n  },\n  url: {\n    color: '#ffffff', // D\n  },\n  '.language-css .token.string': {\n    color: '#ffffff', // D\n  },\n  '.language-scss .token.string': {\n    color: '#ffffff', // D\n  },\n  '.style .token.string': {\n    color: '#ffffff', // D\n  },\n  'attr-value': {\n    color: '#ffffff', // D\n  },\n  keyword: {\n    color: '#ffffff', // D\n  },\n  control: {\n    color: '#ffffff', // D\n  },\n  directive: {\n    color: '#ffffff', // D\n  },\n  unit: {\n    color: '#ffffff', // D\n  },\n  statement: {\n    color: '#ffffff', // D\n  },\n  regex: {\n    color: '#ffffff', // D\n  },\n  atrule: {\n    color: '#ffffff', // D\n  },\n  placeholder: {\n    color: '#ffffff', // D\n  },\n  variable: {\n    color: '#ffffff', // D\n  },\n  deleted: {\n    textDecoration: 'line-through',\n  },\n  inserted: {\n    borderBottom: '1px dotted #eeebff',\n    textDecoration: 'none',\n  },\n  italic: {\n    fontStyle: 'italic',\n  },\n  important: {\n    fontWeight: 'bold',\n    color: '#c4b9fe',\n  },\n  bold: {\n    fontWeight: 'bold',\n  },\n  'pre > code.highlight': {\n    Outline: '.4em solid #8a75f5',\n    OutlineOffset: '.4em',\n  },\n  '.line-numbers.line-numbers .line-numbers-rows': {\n    borderRightColor: '#2c2937',\n  },\n  '.line-numbers .line-numbers-rows > span:before': {\n    color: '#3c3949',\n  },\n  '.line-highlight.line-highlight': {\n    background: 'linear-gradient(to right, rgba(224, 145, 66, 0.2) 70%, rgba(224, 145, 66, 0))',\n  },\n};\n\nexport default databricksDuotoneDarkTheme;\n","/**\n * Adapted from `material-light`\n * Ref: https://github.com/react-syntax-highlighter/react-syntax-highlighter/blob/b2457268891948f7005ccf539a70c000f0695bde/src/styles/prism/material-light.js#L1\n *\n * This theme overwrites colors to be similiar to the `@databricks/editor` theme.\n */\n\nconst databricksLightTheme = {\n  'code[class*=\"language-\"]': {\n    textAlign: 'left',\n    whiteSpace: 'pre',\n    wordSpacing: 'normal',\n    wordBreak: 'normal',\n    wordWrap: 'normal',\n    color: 'rgb(77, 77, 76)', // D\n    background: '#fafafa',\n    fontFamily: 'Monaco, Menlo, Ubuntu Mono, Consolas, source-code-pro, monospace',\n    fontSize: '12px', // D\n    lineHeight: '1.5em',\n    MozTabSize: '4',\n    OTabSize: '4',\n    tabSize: '4',\n    WebkitHyphens: 'none',\n    MozHyphens: 'none',\n    msHyphens: 'none',\n    hyphens: 'none',\n  },\n  'pre[class*=\"language-\"]': {\n    textAlign: 'left',\n    whiteSpace: 'pre',\n    wordSpacing: 'normal',\n    wordBreak: 'normal',\n    wordWrap: 'normal',\n    color: 'rgb(77, 77, 76)', // D\n    background: '#fafafa',\n    fontFamily: 'Monaco, Menlo, Ubuntu Mono, Consolas, source-code-pro, monospace',\n    fontSize: '12px', // D\n    lineHeight: '1.5em',\n    MozTabSize: '4',\n    OTabSize: '4',\n    tabSize: '4',\n    WebkitHyphens: 'none',\n    MozHyphens: 'none',\n    msHyphens: 'none',\n    hyphens: 'none',\n    overflow: 'auto',\n    position: 'relative',\n    margin: '0.5em 0',\n    padding: '1.25em 1em',\n  },\n  'code[class*=\"language-\"]::-moz-selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'pre[class*=\"language-\"]::-moz-selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'code[class*=\"language-\"] ::-moz-selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'pre[class*=\"language-\"] ::-moz-selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'code[class*=\"language-\"]::selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'pre[class*=\"language-\"]::selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'code[class*=\"language-\"] ::selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'pre[class*=\"language-\"] ::selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  ':not(pre) > code[class*=\"language-\"]': {\n    whiteSpace: 'normal',\n    borderRadius: '0.2em',\n    padding: '0.1em',\n  },\n  '.language-css > code': {\n    color: '#f5871f', // D\n  },\n  '.language-sass > code': {\n    color: '#f5871f', // D\n  },\n  '.language-scss > code': {\n    color: '#f5871f', // D\n  },\n  '[class*=\"language-\"] .namespace': {\n    Opacity: '0.7',\n  },\n  atrule: {\n    color: '#7c4dff',\n  },\n  'attr-name': {\n    color: '#39adb5',\n  },\n  'attr-value': {\n    color: '#f6a434',\n  },\n  attribute: {\n    color: '#f6a434',\n  },\n  boolean: {\n    color: '#7c4dff', // D\n  },\n  builtin: {\n    color: '#39adb5',\n  },\n  cdata: {\n    color: '#39adb5',\n  },\n  char: {\n    color: '#39adb5',\n  },\n  class: {\n    color: '#39adb5',\n  },\n  'class-name': {\n    color: '#6182b8',\n  },\n  comment: {\n    color: '#8e908c', // D\n  },\n  constant: {\n    color: '#7c4dff', // D\n  },\n  deleted: {\n    color: '#e53935',\n  },\n  doctype: {\n    color: '#aabfc9',\n  },\n  entity: {\n    color: '#e53935',\n  },\n  function: {\n    color: '#4271ae', // D\n  },\n  hexcode: {\n    color: '#f5871f', // D\n  },\n  id: {\n    color: '#7c4dff',\n    fontWeight: 'bold',\n  },\n  important: {\n    color: '#7c4dff',\n    fontWeight: 'bold',\n  },\n  inserted: {\n    color: '#39adb5',\n  },\n  keyword: {\n    color: '#8959a8', // D\n  },\n  number: {\n    color: '#f5871f', // D\n  },\n  operator: {\n    color: '#3e999f', // D\n  },\n  prolog: {\n    color: '#aabfc9',\n  },\n  property: {\n    color: '#39adb5',\n  },\n  'pseudo-class': {\n    color: '#f6a434',\n  },\n  'pseudo-element': {\n    color: '#f6a434',\n  },\n  punctuation: {\n    color: 'rgb(77, 77, 76)', // D\n  },\n  regex: {\n    color: '#6182b8',\n  },\n  selector: {\n    color: '#e53935',\n  },\n  string: {\n    color: '#3ba85f', // D\n  },\n  symbol: {\n    color: '#7c4dff',\n  },\n  tag: {\n    color: '#e53935',\n  },\n  unit: {\n    color: '#f5871f', // D\n  },\n  url: {\n    color: '#e53935',\n  },\n  variable: {\n    color: '#c72d4c', // D\n  },\n};\n\nexport default databricksLightTheme;\n","import { css } from '@emotion/react';\nimport type { ReactNode } from 'react';\nimport React from 'react';\n\nimport type { ButtonProps } from '@databricks/design-system';\nimport { Button, LegacyTooltip } from '@databricks/design-system';\n\ntype SnippetActionButtonProps = Pick<ButtonProps, 'icon' | 'onClick' | 'href' | 'rel' | 'target'> & {\n  tooltipMessage: NonNullable<ReactNode>;\n};\n\nexport default function SnippetActionButton({ tooltipMessage, ...buttonProps }: SnippetActionButtonProps) {\n  const style = css({\n    zIndex: 1, // required for action buttons to be visible and float\n  });\n  return (\n    <LegacyTooltip title={tooltipMessage}>\n      <Button\n        componentId=\"codegen_web-shared_src_snippet_actions_snippetactionbutton.tsx_33\"\n        {...buttonProps}\n        css={style}\n      />\n    </LegacyTooltip>\n  );\n}\n","import React from 'react';\n\nimport type { ButtonProps } from '@databricks/design-system';\nimport { useCopyController } from '@databricks/web-shared/copy';\n\nimport SnippetActionButton from './SnippetActionButton';\n\nexport interface SnippetCopyActionProps extends ButtonProps {\n  /**\n   * The text to be copied into clipboard when action button is clicked.\n   */\n  copyText: string;\n  onClick?: (e: React.MouseEvent) => void;\n}\n\nexport function SnippetCopyAction({ copyText, onClick, ...props }: SnippetCopyActionProps) {\n  const { actionIcon, tooltipMessage, copy } = useCopyController(copyText);\n\n  return (\n    <SnippetActionButton\n      tooltipMessage={tooltipMessage}\n      icon={actionIcon}\n      onClick={(e) => {\n        copy();\n        onClick?.(e);\n      }}\n      {...props}\n    />\n  );\n}\n","import { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport go from 'react-syntax-highlighter/dist/cjs/languages/prism/go';\nimport java from 'react-syntax-highlighter/dist/cjs/languages/prism/java';\nimport javascript from 'react-syntax-highlighter/dist/cjs/languages/prism/javascript';\nimport json from 'react-syntax-highlighter/dist/cjs/languages/prism/json';\nimport python from 'react-syntax-highlighter/dist/cjs/languages/prism/python';\nimport yaml from 'react-syntax-highlighter/dist/cjs/languages/prism/yaml';\nimport sql from 'react-syntax-highlighter/dist/cjs/languages/prism/sql';\n\nSyntaxHighlighter.registerLanguage('sql', sql);\nSyntaxHighlighter.registerLanguage('java', java);\nSyntaxHighlighter.registerLanguage('python', python);\nSyntaxHighlighter.registerLanguage('go', go);\nSyntaxHighlighter.registerLanguage('javascript', javascript);\nSyntaxHighlighter.registerLanguage('yaml', yaml);\nSyntaxHighlighter.registerLanguage('json', json);\n\nimport duotoneDarkStyle from './theme/databricks-duotone-dark';\nimport lightStyle from './theme/databricks-light';\nimport { CSSProperties, ReactNode } from 'react';\nimport { pick } from 'lodash';\nexport type CodeSnippetTheme = 'duotoneDark' | 'light';\nexport const buttonBackgroundColorDark = 'rgba(140, 203, 255, 0)';\nexport const buttonColorDark = 'rgba(255, 255, 255, 0.84)';\nexport const buttonHoverColorDark = '#8ccbffcc';\nexport const buttonHoverBackgroundColorDark = 'rgba(140, 203, 255, 0.08)';\nexport const duboisAlertBackgroundColor = '#fff0f0';\nexport const snippetPadding = '24px';\nconst themesStyles: Record<CodeSnippetTheme, any> = {\n  light: lightStyle,\n  duotoneDark: duotoneDarkStyle,\n};\n\nexport type CodeSnippetLanguage = 'sql' | 'java' | 'python' | 'javascript' | 'go' | 'yaml' | 'text' | 'json';\n\nexport interface CodeSnippetProps {\n  /**\n   * The code string\n   */\n  children: string;\n  /**\n   * The actions that are displayed on the right top corner of the component\n   *  see `./actions` for built-in actions\n   */\n  actions?: NonNullable<ReactNode> | NonNullable<ReactNode>[];\n  /**\n   * The theme, default theme is `light`\n   */\n  theme?: CodeSnippetTheme;\n  /**\n   * Language of the code (`children`)\n   */\n  language: CodeSnippetLanguage;\n  /**\n   * Custom styles (passed to the internal `<pre>`)\n   */\n  style?: CSSProperties;\n  /**\n   * Whether to show line numbers on the left or not\n   */\n  showLineNumbers?: boolean;\n  /**\n   * Custom styles for line numbers\n   */\n  lineNumberStyle?: CSSProperties;\n  /**\n   * Boolean to specify whether to style the <code> block with white-space: pre-wrap or white-space: pre\n   */\n  wrapLongLines?: boolean;\n  /**\n   * Boolean that determines whether or not each line of code should be wrapped in a parent element\n   */\n  wrapLines?: boolean;\n  /**\n   * Props to pass to the line elements\n   */\n  lineProps?: React.HTMLProps<HTMLElement> | undefined;\n  /**\n   * Custom tag to use for the `<pre>` element\n   */\n  PreTag?: keyof JSX.IntrinsicElements | React.ComponentType<any> | undefined;\n}\n\n/**\n * `CodeSnippet` is used for highlighting code, use this instead of\n */\nexport function CodeSnippet({\n  theme = 'light',\n  language,\n  actions,\n  style,\n  children,\n  showLineNumbers,\n  lineNumberStyle,\n  wrapLongLines,\n  wrapLines,\n  PreTag,\n}: CodeSnippetProps) {\n  const customStyle = {\n    border: 'none',\n    borderRadius: 0,\n    margin: 0,\n    padding: snippetPadding,\n    ...style,\n  };\n  return (\n    <SyntaxHighlighter\n      showLineNumbers={showLineNumbers}\n      lineNumberStyle={lineNumberStyle}\n      language={language}\n      style={themesStyles[theme]}\n      customStyle={customStyle}\n      codeTagProps={{\n        style: pick(style, 'backgroundColor'),\n      }}\n      wrapLongLines={wrapLongLines}\n      wrapLines={wrapLines}\n      PreTag={PreTag}\n    >\n      {children}\n    </SyntaxHighlighter>\n  );\n}\n\nexport * from './actions/SnippetCopyAction';\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\n/**\n * Utils for working with local storage.\n */\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class -- TODO(FEINF-4274)\nexport default class LocalStorageUtils {\n  /**\n   * Protocol version of MLflow's local storage. Should be incremented on any breaking change in how\n   * data persisted in local storage is used, to prevent old (invalid) cached data from being loaded\n   * and breaking the application.\n   */\n  static version = '1.1';\n\n  /**\n   * Return a LocalStorageStore corresponding to the specified component and ID, where the ID\n   * can be used to disambiguate between multiple instances of cached data for the same component\n   * (e.g. cached data for multiple experiments).\n   */\n  static getStoreForComponent(componentName: any, id: any) {\n    return new LocalStorageStore([componentName, id].join('-'), 'localStorage');\n  }\n\n  static getSessionScopedStoreForComponent(componentName: any, id: any) {\n    return new LocalStorageStore([componentName, id].join('-'), 'sessionStorage');\n  }\n}\n\n/**\n * Interface to browser local storage that allows for setting key-value pairs under the specified\n * \"scope\".\n */\nclass LocalStorageStore {\n  constructor(scope: any, type: any) {\n    this.scope = scope;\n    if (type === 'localStorage') {\n      this.storageObj = window.localStorage;\n    } else {\n      this.storageObj = window.sessionStorage;\n    }\n  }\n  static reactComponentStateKey = 'ReactComponentState';\n\n  scope: any;\n  storageObj: any;\n\n  /**\n   * Loads React component state cached in local storage into a vanilla JS object.\n   */\n  loadComponentState() {\n    const storedVal = this.getItem(LocalStorageStore.reactComponentStateKey);\n    if (storedVal) {\n      return JSON.parse(storedVal);\n    }\n    return {};\n  }\n\n  /**\n   * Save React component state in local storage.\n   * @param stateRecord: Immutable.Record instance or plain object containing component state.\n   */\n  saveComponentState(stateRecord: any) {\n    const targetValue = typeof stateRecord.toJSON === 'function' ? stateRecord.toJSON() : stateRecord;\n    this.setItem(LocalStorageStore.reactComponentStateKey, JSON.stringify(targetValue));\n  }\n\n  /**\n   * Helper method for constructing a scoped key to use for setting/getting values in\n   * local storage.\n   */\n  withScopePrefix(key: any) {\n    return ['MLflowLocalStorage', LocalStorageUtils.version, this.scope, key].join('-');\n  }\n\n  /** Save the specified key-value pair in local storage. */\n  setItem(key: any, value: any) {\n    this.storageObj.setItem(this.withScopePrefix(key), value);\n  }\n\n  /** Fetch the value corresponding to the passed-in key from local storage. */\n  getItem(key: any) {\n    return this.storageObj.getItem(this.withScopePrefix(key));\n  }\n}\n","import React from 'react';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\n\nfunction useMatchesMediaQuery(queryList: MediaQueryList) {\n  return useSyncExternalStore(\n    React.useCallback(\n      (callback) => {\n        queryList.addEventListener('change', callback);\n        return () => {\n          queryList.removeEventListener('change', callback);\n        };\n      },\n      [queryList],\n    ),\n    () => queryList.matches,\n  );\n}\n\n/**\n * React hook that listens for changes to a [media query][media-query]. Uses\n * [`window.matchMedia()`][match-media] under-the-hood.\n *\n * [media-query]: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_media_queries/Using_media_queries\n * [match-media]: https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia\n *\n * @usage\n *\n * ```tsx\n * function FancyButton() {\n *   const prefersReducedMotion = useMediaQuery('(prefers-reduced-motion)');\n *   return prefersReducedMotion ? <Button /> : <DancingButton />;\n * }\n * ```\n *\n * > **Note**\n * > The vast majority of use-cases can (and should) use vanilla CSS media\n * > queries instead of this hook — which will cause a re-render when the match\n * > state changes. Usage of this hook should be reserved for use-cases where\n * > CSS cannot be used instead.\n * >\n * > ```tsx\n * > <Button css={{ 'not (prefers-reduced-motion)': { animation: … } }} />\n * > ```\n */\nexport function useMediaQuery(query: string) {\n  // Note: a new MediaQueryList is created with every _usage_ of this hook.\n  // It's probably cheap to create many instances of MediaQueryList, and\n  // garbage collection will still clean up as expected, but consider using a\n  // [weak cache](https://github.com/tc39/proposal-weakrefs#weak-caches) to\n  // reuse MediaQueryLists where possible if performance is impacted.\n  const queryList = React.useMemo(() => window.matchMedia(query), [query]);\n  return useMatchesMediaQuery(queryList);\n}\n","import { type RefObject, useRef, useCallback, useEffect, useState } from 'react';\n\ntype ResizeObserverOptions<ElementType extends Element> = {\n  /**\n   * The element to watch for size changes. Can either pass a ref object or a function that when called will return the element to be watched\n   */\n  ref: RefObject<ElementType | null> | (() => ElementType | null);\n  /**\n   * Optionally debounces state updates, to prevent rerendering on every single resize\n   */\n  debounceTimeMs?: number;\n};\n\nexport function useResizeObserver<ElementType extends Element>({\n  ref: rootRef,\n  debounceTimeMs,\n}: ResizeObserverOptions<ElementType>): { width: number; height: number } | null {\n  const prevSize = useRef<{ width: number; height: number }>({ width: -1, height: -1 });\n  const debounceRef = useRef<ReturnType<typeof setTimeout>>();\n  const [size, setSize] = useState<{ width: number; height: number } | null>(null);\n\n  const onResize = useCallback(\n    (entries: ResizeObserverEntry[]) => {\n      if (entries.length === 0) {\n        return;\n      }\n\n      const rect = entries[0].contentRect;\n      if (prevSize.current.width === -1) {\n        // First update, just set size immediately\n        prevSize.current = { width: rect.width, height: rect.height };\n        setSize(prevSize.current);\n        return;\n      }\n\n      if (rect.width !== prevSize.current.width || rect.height !== prevSize.current.height) {\n        prevSize.current.width = rect.width;\n        prevSize.current.height = rect.height;\n\n        if (!debounceTimeMs) {\n          setSize({ ...prevSize.current });\n          return;\n        }\n        clearTimeout(debounceRef.current);\n        debounceRef.current = setTimeout(() => {\n          setSize({ ...prevSize.current });\n        }, debounceTimeMs);\n      }\n    },\n    [debounceTimeMs],\n  );\n\n  const observerRef = useRef<ResizeObserver>();\n  if (!observerRef.current) {\n    observerRef.current = new ResizeObserver(onResize);\n  }\n\n  useEffect(() => {\n    const rootElement = typeof rootRef === 'function' ? rootRef() : rootRef.current;\n    if (rootElement) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- TODO(FEINF-3982)\n      const observer = observerRef.current!;\n      observer.observe(rootElement);\n      return () => observer.unobserve(rootElement);\n    }\n    return;\n  });\n\n  return size;\n}\n"],"names":["ExperimentSourceTypeIcon","sourceType","className","SourceType","NOTEBOOK","_jsx","NotebookIcon","LOCAL","FileCodeIcon","PROJECT","FolderBranchIcon","JOB","WorkflowsIcon","useCopyController","text","copyTooltip","onCopy","intl","useIntl","copyMessage","formatMessage","id","defaultMessage","copiedMessage","clipboard","useClipboard","copiedTimerIdRef","useRef","copied","setCopied","useState","open","setOpen","useEffect","window","clearTimeout","current","actionIcon","CheckIcon","CopyIcon","tooltipMessage","copy","setTimeout","ariaLabel","tooltipOpen","handleTooltipOpenChange","CopyActionButton","buttonProps","componentId","copyText","isInsideInputGroup","tooltipProps","button","Button","icon","onClick","size","inputGroupButton","children","Tooltip","content","onOpenChange","_ref","name","styles","SourceCellRenderer","React","value","tags","_tags$Utils$sourceTyp","theme","useDesignSystemTheme","_Fragment","Utils","sourceTypeTag","sourceLink","renderSource","undefined","_jsxs","css","_css","display","gap","spacing","xs","alignItems","color","colors","textSecondary","fontFamily","fontSize","lineHeight","direction","textAlign","whiteSpace","wordSpacing","wordBreak","MozTabSize","OTabSize","tabSize","WebkitHyphens","MozHyphens","msHyphens","hyphens","background","padding","margin","overflow","textShadow","borderRadius","comment","prolog","doctype","cdata","punctuation","namespace","Opacity","tag","operator","number","property","function","selector","boolean","string","entity","cursor","url","keyword","control","directive","unit","statement","regex","atrule","placeholder","variable","deleted","textDecoration","inserted","borderBottom","italic","fontStyle","important","fontWeight","bold","Outline","OutlineOffset","borderRightColor","wordWrap","position","attribute","builtin","char","class","constant","hexcode","symbol","SnippetActionButton","style","LegacyTooltip","title","SnippetCopyAction","props","e","SyntaxHighlighter","registerLanguage","sql","java","python","go","javascript","yaml","json","snippetPadding","themesStyles","light","lightStyle","duotoneDark","duotoneDarkStyle","CodeSnippet","language","actions","showLineNumbers","lineNumberStyle","wrapLongLines","wrapLines","PreTag","customStyle","border","codeTagProps","pick","LocalStorageUtils","getStoreForComponent","componentName","LocalStorageStore","join","getSessionScopedStoreForComponent","version","constructor","scope","type","storageObj","this","localStorage","sessionStorage","loadComponentState","storedVal","getItem","reactComponentStateKey","JSON","parse","saveComponentState","stateRecord","targetValue","toJSON","setItem","stringify","withScopePrefix","key","useMediaQuery","query","queryList","useSyncExternalStore","callback","addEventListener","removeEventListener","matches","useMatchesMediaQuery","matchMedia","useResizeObserver","ref","rootRef","debounceTimeMs","prevSize","width","height","debounceRef","setSize","onResize","useCallback","entries","length","rect","contentRect","observerRef","ResizeObserver","rootElement","observer","observe","unobserve"],"sourceRoot":""}