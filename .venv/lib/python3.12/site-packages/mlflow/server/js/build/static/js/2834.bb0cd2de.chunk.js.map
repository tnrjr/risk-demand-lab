{"version":3,"file":"static/js/2834.bb0cd2de.chunk.js","mappings":"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","sources":["experiment-tracking/components/CompareRunUtil.ts","common/components/error-boundaries/SectionErrorBoundary.tsx","shared/building_blocks/PreviewBadge.tsx","common/components/PageContainer.tsx","common/components/RequestStateWrapper.tsx","shared/building_blocks/PageHeader.tsx","common/components/Spinner.tsx"],"sourcesContent":["/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class -- TODO(FEINF-4274)\nexport default class CompareRunUtil {\n  /**\n   * Find in a list of metrics/params a certain key\n   */\n  static findInList(data: any, key: any) {\n    let found = undefined;\n    data.forEach((value: any) => {\n      if (value.key === key) {\n        found = value;\n      }\n    });\n    return found;\n  }\n\n  /**\n   * Get all keys present in the data in ParamLists or MetricLists or Schema input and outputs lists\n   */\n  static getKeys(lists: any, numeric: any) {\n    const keys = {};\n    lists.forEach((list: any) =>\n      list.forEach((item: any) => {\n        if (!(item.key in keys)) {\n          // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n          keys[item.key] = true;\n        }\n        if (numeric && isNaN(parseFloat(item.value))) {\n          // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n          keys[item.key] = false;\n        }\n      }),\n    );\n    return (\n      Object.keys(keys)\n        // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n        .filter((k) => keys[k])\n        .sort()\n    );\n  }\n}\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React from 'react';\nimport Utils from '../../utils/Utils';\n\ntype Props = {\n  showServerError?: boolean;\n};\n\ntype State = any;\n\nexport class SectionErrorBoundary extends React.Component<Props, State> {\n  state = { error: null };\n\n  componentDidCatch(error: any, errorInfo: any) {\n    this.setState({ error });\n    // eslint-disable-next-line no-console -- TODO(FEINF-3587)\n    console.error(error, errorInfo);\n  }\n\n  renderErrorMessage(error: any) {\n    return this.props.showServerError ? <div>Error message: {error.message}</div> : '';\n  }\n\n  render() {\n    const { children } = this.props;\n    const { error } = this.state;\n    if (error) {\n      return (\n        <div>\n          <p>\n            <i\n              data-testid=\"icon-fail\"\n              className=\"fa fa-exclamation-triangle mlflow-icon-fail\"\n              css={classNames.wrapper}\n            />\n            <span> Something went wrong with this section. </span>\n            <span>If this error persists, please report an issue </span>\n            {/* Reported during ESLint upgrade */}\n            {/* eslint-disable-next-line react/jsx-no-target-blank */}\n            <a href={Utils.getSupportPageUrl()} target=\"_blank\">\n              here\n            </a>\n            .{this.renderErrorMessage(error)}\n          </p>\n        </div>\n      );\n    }\n\n    return children;\n  }\n}\n\nconst classNames = {\n  wrapper: {\n    marginLeft: -2, // to align the failure icon with the collapsable section caret toggle\n  },\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Tag, useDesignSystemTheme } from '@databricks/design-system';\nexport const PreviewBadge = ({ className }: { className?: string }) => {\n  const { theme } = useDesignSystemTheme();\n  return (\n    <Tag\n      componentId=\"codegen_mlflow_app_src_shared_building_blocks_previewbadge.tsx_14\"\n      className={className}\n      css={{ marginLeft: theme.spacing.xs }}\n      color=\"turquoise\"\n    >\n      <FormattedMessage\n        defaultMessage=\"Experimental\"\n        description=\"Experimental badge shown for features which are experimental\"\n      />\n    </Tag>\n  );\n};\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React from 'react';\nimport { PageWrapper, Spacer } from '@databricks/design-system';\n\ntype OwnProps = {\n  usesFullHeight?: boolean;\n  children?: React.ReactNode;\n};\n\n// @ts-expect-error TS(2565): Property 'defaultProps' is used before being assig... Remove this comment to see the full error message\ntype Props = OwnProps & typeof PageContainer.defaultProps;\n\nexport function PageContainer(props: Props) {\n  const { usesFullHeight, ...restProps } = props;\n  return (\n    // @ts-expect-error TS(2322): Type '{ height: string; display: string; flexDirec... Remove this comment to see the full error message\n    <PageWrapper css={usesFullHeight ? styles.useFullHeightLayout : styles.wrapper}>\n      {/* @ts-expect-error TS(2322): Type '{ css: { flexShrink: number; }; }' is not as... Remove this comment to see the full error message */}\n      <Spacer css={styles.fixedSpacer} />\n      {usesFullHeight ? props.children : <div {...restProps} css={styles.container} />}\n    </PageWrapper>\n  );\n}\n\nPageContainer.defaultProps = {\n  usesFullHeight: false,\n};\n\nconst styles = {\n  useFullHeightLayout: {\n    height: 'calc(100% - 60px)', // 60px comes from header height\n    display: 'flex',\n    flexDirection: 'column',\n    '&:last-child': {\n      flexGrow: 1,\n    },\n  },\n  wrapper: { flex: 1 },\n  fixedSpacer: {\n    // Ensure spacer's fixed height regardless of flex\n    flexShrink: 0,\n  },\n  container: {\n    width: '100%',\n    flexGrow: 1,\n    paddingBottom: 24,\n  },\n};\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getApis } from '../../experiment-tracking/reducers/Reducers';\nimport { Spinner } from './Spinner';\nimport { ErrorCodes } from '../constants';\nimport { ErrorWrapper } from '../utils/ErrorWrapper';\nimport { ReduxState } from '../../redux-types';\n\nexport const DEFAULT_ERROR_MESSAGE = 'A request error occurred.';\n\ntype RequestStateWrapperProps = {\n  children?: React.ReactNode;\n  customSpinner?: React.ReactNode;\n  shouldOptimisticallyRender?: boolean;\n  requests: any[];\n  requestIds?: string[];\n  requestIdsWith404sToIgnore?: string[];\n  description?: any; // TODO: PropTypes.oneOf(Object.values(LoadingDescription))\n  permissionDeniedView?: React.ReactNode;\n  suppressErrorThrow?: boolean;\n  customRequestErrorHandlerFn?: (\n    failedRequests: {\n      id: string;\n      active?: boolean;\n      error: Error | ErrorWrapper;\n    }[],\n  ) => void;\n};\n\ntype RequestStateWrapperState = any;\n\nexport class RequestStateWrapper extends Component<RequestStateWrapperProps, RequestStateWrapperState> {\n  static defaultProps = {\n    requests: [],\n    requestIdsWith404sToIgnore: [],\n    shouldOptimisticallyRender: false,\n  };\n\n  state = {\n    shouldRender: false,\n    shouldRenderError: false,\n  };\n\n  static getErrorRequests(requests: any, requestIdsWith404sToIgnore: any) {\n    return requests.filter((r: any) => {\n      if (r.error !== undefined) {\n        return !(\n          requestIdsWith404sToIgnore &&\n          requestIdsWith404sToIgnore.includes(r.id) &&\n          r.error.getErrorCode() === ErrorCodes.RESOURCE_DOES_NOT_EXIST\n        );\n      }\n      return false;\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps: any) {\n    const shouldRender = nextProps.requests.length\n      ? nextProps.requests.every((r: any) => r && r.active === false)\n      : false;\n\n    const requestErrors = RequestStateWrapper.getErrorRequests(\n      nextProps.requests,\n      nextProps.requestIdsWith404sToIgnore,\n    );\n\n    return {\n      shouldRender,\n      shouldRenderError: requestErrors.length > 0,\n      requestErrors,\n    };\n  }\n\n  getRenderedContent() {\n    const { children, requests, customSpinner, permissionDeniedView, suppressErrorThrow, customRequestErrorHandlerFn } =\n      this.props;\n    // @ts-expect-error TS(2339): Property 'requestErrors' does not exist on type '{... Remove this comment to see the full error message\n    const { shouldRender, shouldRenderError, requestErrors } = this.state;\n    const permissionDeniedErrors = requestErrors.filter((failedRequest: any) => {\n      return failedRequest.error.getErrorCode() === ErrorCodes.PERMISSION_DENIED;\n    });\n\n    if (typeof children === 'function') {\n      return children(!shouldRender, shouldRenderError, requests, requestErrors);\n    } else if (shouldRender || shouldRenderError || this.props.shouldOptimisticallyRender) {\n      if (permissionDeniedErrors.length > 0 && permissionDeniedView) {\n        return permissionDeniedView;\n      }\n      if (shouldRenderError && !suppressErrorThrow) {\n        customRequestErrorHandlerFn ? customRequestErrorHandlerFn(requestErrors) : triggerError(requestErrors);\n      }\n\n      return children;\n    }\n\n    return customSpinner || <Spinner />;\n  }\n\n  render() {\n    return this.getRenderedContent();\n  }\n}\n\nexport const triggerError = (requests: any) => {\n  // This triggers the OOPS error boundary.\n  // eslint-disable-next-line no-console -- TODO(FEINF-3587)\n  console.error('ERROR', requests);\n  throw Error(`${DEFAULT_ERROR_MESSAGE}: ${requests.error}`);\n};\n\nconst mapStateToProps = (state: ReduxState, ownProps: Omit<RequestStateWrapperProps, 'requests'>) => ({\n  requests: getApis(ownProps.requestIds, state),\n});\n\nexport default connect(mapStateToProps)(RequestStateWrapper);\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React from 'react';\nimport {\n  Breadcrumb,\n  Button,\n  Spacer,\n  Dropdown,\n  Menu,\n  Header,\n  OverflowIcon,\n  useDesignSystemTheme,\n  type HeaderProps,\n} from '@databricks/design-system';\nimport { useIntl } from 'react-intl';\n\nimport { PreviewBadge } from './PreviewBadge';\n\ntype OverflowMenuProps = {\n  menu?: {\n    id: string;\n    itemName: React.ReactNode;\n    onClick?: (...args: any[]) => any;\n    href?: string;\n  }[];\n};\n\nexport function OverflowMenu({ menu }: OverflowMenuProps) {\n  const overflowMenu = (\n    <Menu>\n      {/* @ts-expect-error TS(2532): Object is possibly 'undefined'. */}\n      {menu.map(({ id, itemName, onClick, href, ...otherProps }) => (\n        // @ts-expect-error TS(2769): No overload matches this call.\n        <Menu.Item key={id} onClick={onClick} href={href} data-testid={id} {...otherProps}>\n          {itemName}\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n  return menu.length > 0 ? (\n    <Dropdown overlay={overflowMenu} trigger={['click']} placement=\"bottomLeft\" arrow>\n      <Button\n        componentId=\"codegen_mlflow_app_src_shared_building_blocks_pageheader.tsx_54\"\n        icon={<OverflowIcon />}\n        data-testid=\"overflow-menu-trigger\"\n        aria-label=\"Open header dropdown menu\"\n      />\n    </Dropdown>\n  ) : null;\n}\n\ntype PageHeaderProps = Pick<HeaderProps, 'dangerouslyAppendEmotionCSS'> & {\n  title: React.ReactNode;\n  breadcrumbs?: React.ReactNode[];\n  preview?: boolean;\n  feedbackOrigin?: string;\n  infoPopover?: React.ReactNode;\n  children?: React.ReactNode;\n  spacerSize?: 'xs' | 'sm' | 'md' | 'lg';\n  hideSpacer?: boolean;\n  titleAddOns?: React.ReactNode | React.ReactNode[];\n};\n\n/**\n * A page header that includes:\n *   - title,\n *   - optional breadcrumb content,\n *   - optional preview mark,\n *   - optional feedback origin: shows the \"Send feedback\" button when not empty, and\n *   - optional info popover, safe to have link inside.\n */\nexport function PageHeader(props: PageHeaderProps) {\n  const {\n    title, // required\n    breadcrumbs = [],\n    titleAddOns = [],\n    preview,\n    children,\n    spacerSize,\n    hideSpacer = false,\n    dangerouslyAppendEmotionCSS,\n  } = props;\n  const { theme } = useDesignSystemTheme();\n  const intl = useIntl();\n\n  return (\n    <>\n      <Header\n        breadcrumbs={\n          breadcrumbs.length > 0 && (\n            <Breadcrumb includeTrailingCaret>\n              {breadcrumbs.map((b, i) => (\n                <Breadcrumb.Item key={i}>{b}</Breadcrumb.Item>\n              ))}\n            </Breadcrumb>\n          )\n        }\n        buttons={children}\n        title={title}\n        // prettier-ignore\n        titleAddOns={\n          <>\n            {preview && <PreviewBadge css={{ marginLeft: 0 }} />}\n            {titleAddOns}\n          </>\n        }\n        dangerouslyAppendEmotionCSS={dangerouslyAppendEmotionCSS}\n      />\n      <Spacer\n        // @ts-expect-error TS(2322): Type '{ css: { flexShrink: number; }; }' is not as... Remove this comment to see the full error message\n        css={{\n          // Ensure spacer's fixed height\n          flexShrink: 0,\n          ...(hideSpacer ? { display: 'none' } : {}),\n        }}\n        size={spacerSize}\n      />\n    </>\n  );\n}\n","import spinner from '../static/mlflow-spinner.png';\nimport { Interpolation, keyframes, Theme } from '@emotion/react';\n\ntype Props = {\n  showImmediately?: boolean;\n};\n\nexport function Spinner({ showImmediately }: Props) {\n  return (\n    <div css={(theme) => styles.spinner(theme, showImmediately)}>\n      <img alt=\"Page loading...\" src={spinner} />\n    </div>\n  );\n}\n\nconst styles = {\n  spinner: (theme: Theme, immediate?: boolean): Interpolation<Theme> => ({\n    width: 100,\n    marginTop: 100,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n\n    img: {\n      position: 'absolute',\n      opacity: 0,\n      top: '50%',\n      left: '50%',\n      width: theme.general.heightBase * 2,\n      height: theme.general.heightBase * 2,\n      marginTop: -theme.general.heightBase,\n      marginLeft: -theme.general.heightBase,\n      animation: `${keyframes`\n          0% {\n            opacity: 1;\n          }\n          100% {\n            opacity: 1;\n            -webkit-transform: rotate(360deg);\n                transform: rotate(360deg);\n            }\n          `} 3s linear infinite`,\n      animationDelay: immediate ? '0s' : '0.5s',\n    },\n  }),\n};\n"],"names":["CompareRunUtil","findInList","data","key","found","forEach","value","getKeys","lists","numeric","keys","list","item","isNaN","parseFloat","Object","filter","k","sort","SectionErrorBoundary","React","constructor","args","state","error","componentDidCatch","errorInfo","this","setState","console","renderErrorMessage","props","showServerError","_jsxs","children","message","render","_jsx","className","css","classNames","wrapper","href","Utils","getSupportPageUrl","target","marginLeft","PreviewBadge","theme","useDesignSystemTheme","Tag","componentId","_css","spacing","xs","color","FormattedMessage","id","defaultMessage","PageContainer","usesFullHeight","restProps","PageWrapper","styles","useFullHeightLayout","Spacer","fixedSpacer","container","defaultProps","height","display","flexDirection","flexGrow","flex","flexShrink","width","paddingBottom","RequestStateWrapper","Component","shouldRender","shouldRenderError","getErrorRequests","requests","requestIdsWith404sToIgnore","r","undefined","includes","getErrorCode","ErrorCodes","RESOURCE_DOES_NOT_EXIST","getDerivedStateFromProps","nextProps","length","every","active","requestErrors","getRenderedContent","customSpinner","permissionDeniedView","suppressErrorThrow","customRequestErrorHandlerFn","permissionDeniedErrors","failedRequest","PERMISSION_DENIED","shouldOptimisticallyRender","triggerError","Spinner","Error","connect","mapStateToProps","ownProps","getApis","requestIds","OverflowMenu","menu","overflowMenu","Menu","map","itemName","onClick","otherProps","Item","Dropdown","overlay","trigger","placement","arrow","Button","icon","OverflowIcon","_ref","name","PageHeader","title","breadcrumbs","titleAddOns","preview","spacerSize","hideSpacer","dangerouslyAppendEmotionCSS","useIntl","_Fragment","Header","Breadcrumb","includeTrailingCaret","b","i","buttons","size","showImmediately","spinner","alt","src","immediate","marginTop","marginRight","img","position","opacity","top","left","general","heightBase","animation","keyframes","animationDelay"],"sourceRoot":""}