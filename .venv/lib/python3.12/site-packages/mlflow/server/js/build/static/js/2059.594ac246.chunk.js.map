{"version":3,"file":"static/js/2059.594ac246.chunk.js","mappings":"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","sources":["shared/web-shared/copy/useCopyController.tsx","shared/web-shared/copy/CopyActionButton.tsx","experiment-tracking/components/experiment-page/hooks/useRunsArtifacts.tsx","experiment-tracking/components/CompareRunArtifactView.tsx","experiment-tracking/components/experiment-page/utils/getCommonArtifacts.ts","experiment-tracking/components/CompareRunView.tsx","experiment-tracking/components/CompareRunPage.tsx","common/components/CollapsibleSection.tsx","shared/web-shared/snippet/theme/databricks-duotone-dark.ts","shared/web-shared/snippet/theme/databricks-light.ts","shared/web-shared/snippet/actions/SnippetActionButton.tsx","shared/web-shared/snippet/actions/SnippetCopyAction.tsx","shared/web-shared/snippet/index.tsx","shared/building_blocks/Image.tsx","experiment-tracking/components/runs-charts/components/charts/ImageGridPlot.common.tsx","shared/building_blocks/CopyButton.tsx","common/hooks/useSafeDeferredValue.ts"],"sourcesContent":["import type { ReactElement } from 'react';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useClipboard } from 'use-clipboard-copy';\n\nimport { CheckIcon, CopyIcon } from '@databricks/design-system';\nimport { useIntl } from '@databricks/i18n';\n\nexport interface CopyController {\n  actionIcon: ReactElement;\n  tooltipMessage: string;\n  copy: () => void;\n  copied: boolean;\n  ariaLabel: string;\n  tooltipOpen: boolean;\n  handleTooltipOpenChange: (open: boolean) => void;\n}\n\n/**\n * Utility hook that is internal to web-shared, use: `Copyable` or `CopyActionButton`\n *  or if it's a `CodeSnippet`, `SnippetCopyAction`\n */\nexport function useCopyController(text: string, copyTooltip?: string, onCopy?: () => void): CopyController {\n  const intl = useIntl();\n\n  const copyMessage = copyTooltip\n    ? copyTooltip\n    : intl.formatMessage({\n        defaultMessage: 'Copy',\n        description: 'Tooltip message displayed on copy action',\n      });\n\n  const copiedMessage = intl.formatMessage({\n    defaultMessage: 'Copied',\n    description: 'Tooltip message displayed on copy action after it has been clicked',\n  });\n\n  const clipboard = useClipboard();\n  const copiedTimerIdRef = useRef<number>();\n  const [copied, setCopied] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    return () => {\n      window.clearTimeout(copiedTimerIdRef.current);\n    };\n  }, []);\n\n  const copy = () => {\n    clipboard.copy(text);\n    window.clearTimeout(copiedTimerIdRef.current);\n    setCopied(true);\n    onCopy?.();\n    copiedTimerIdRef.current = window.setTimeout(() => {\n      setCopied(false);\n    }, 3000);\n  };\n\n  return {\n    actionIcon: copied ? <CheckIcon /> : <CopyIcon />,\n    tooltipMessage: copied ? copiedMessage : copyMessage,\n    copy,\n    copied,\n    ariaLabel: copyMessage,\n    tooltipOpen: open || copied,\n    handleTooltipOpenChange: setOpen,\n  };\n}\n","import React from 'react';\n\nimport type { ButtonProps, TooltipProps } from '@databricks/design-system';\nimport { Button, Tooltip } from '@databricks/design-system';\n\nimport { useCopyController } from './useCopyController';\n\nexport interface CopyActionButtonProps {\n  buttonProps?: Partial<ButtonProps>;\n  componentId?: string;\n  copyText: string;\n  copyTooltip?: string;\n  isInsideInputGroup?: boolean;\n  onCopy?: () => void;\n  tooltipProps?: Partial<TooltipProps>;\n}\n\nexport function CopyActionButton({\n  buttonProps,\n  componentId,\n  copyText,\n  copyTooltip,\n  isInsideInputGroup = false,\n  onCopy,\n  tooltipProps,\n}: CopyActionButtonProps) {\n  const { actionIcon, copy, handleTooltipOpenChange, tooltipOpen, tooltipMessage } = useCopyController(\n    copyText,\n    copyTooltip,\n    onCopy,\n  );\n\n  const button = (\n    <Button\n      aria-label={tooltipMessage}\n      componentId={componentId ?? 'codegen_web-shared_src_copy_copyactionbutton.tsx_17'}\n      icon={actionIcon}\n      onClick={copy}\n      size=\"small\"\n      {...buttonProps}\n    />\n  );\n\n  const inputGroupButton = (\n    <Button\n      aria-label={tooltipMessage}\n      componentId={componentId ?? 'codegen_web-shared_src_copy_copyactionbutton.tsx_17'}\n      onClick={copy}\n      {...buttonProps}\n    >\n      {actionIcon}\n    </Button>\n  );\n\n  return (\n    <Tooltip\n      componentId={\n        componentId ? `${componentId}-tooltip` : 'codegen_web-shared_src_copy_copyactionbutton.tsx_17-tooltip'\n      }\n      content={tooltipMessage}\n      onOpenChange={handleTooltipOpenChange}\n      open={tooltipOpen}\n      {...tooltipProps}\n    >\n      {isInsideInputGroup ? inputGroupButton : button}\n    </Tooltip>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { listArtifactsApi } from '../../../actions';\nimport { ArtifactListFilesResponse } from '../../../types';\n\n/**\n * Fetches artifacts given a list of run UUIDs\n * @param runUuids List of run UUIDs\n * @returns Object containing artifacts keyed by run UUID\n */\nexport const useRunsArtifacts = (runUuids: string[]) => {\n  const [artifactsKeyedByRun, setArtifactsKeyedByRun] = useState<Record<string, ArtifactListFilesResponse>>({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchArtifacts = async () => {\n      setIsLoading(true);\n      setError(null);\n\n      const artifactsByRun: Record<string, ArtifactListFilesResponse> = {};\n\n      try {\n        await Promise.all(\n          runUuids.map(async (runUuid) => {\n            const response = listArtifactsApi(runUuid);\n            const artifacts = (await response.payload) as ArtifactListFilesResponse;\n            artifactsByRun[runUuid] = artifacts;\n          }),\n        );\n        setArtifactsKeyedByRun(artifactsByRun);\n      } catch (err: any) {\n        setError(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (runUuids.length > 0) {\n      fetchArtifacts();\n    } else {\n      setArtifactsKeyedByRun({});\n      setIsLoading(false);\n    }\n  }, [runUuids]);\n\n  return { artifactsKeyedByRun, isLoading, error };\n};\n","import { useState } from 'react';\nimport ShowArtifactPage from './artifact-view-components/ShowArtifactPage';\nimport { RunInfoEntity } from '../types';\nimport { useRunsArtifacts } from './experiment-page/hooks/useRunsArtifacts';\nimport { getCommonArtifacts } from './experiment-page/utils/getCommonArtifacts';\nimport { useDesignSystemTheme } from '@databricks/design-system';\nimport { FormattedMessage } from 'react-intl';\nimport { ArtifactViewTree } from './ArtifactViewTree';\nimport { getBasename } from '../../common/utils/FileUtils';\n\nexport const CompareRunArtifactView = ({\n  runUuids,\n  runInfos,\n  colWidth,\n}: {\n  runUuids: string[];\n  runInfos: RunInfoEntity[];\n  colWidth: number;\n}) => {\n  const { theme } = useDesignSystemTheme();\n  const [artifactPath, setArtifactPath] = useState<string | undefined>();\n\n  const { artifactsKeyedByRun } = useRunsArtifacts(runUuids);\n  const commonArtifacts = getCommonArtifacts(artifactsKeyedByRun);\n\n  if (commonArtifacts.length === 0) {\n    return (\n      <h2>\n        <FormattedMessage\n          defaultMessage=\"No common artifacts to display.\"\n          description=\"Text shown when there are no common artifacts between the runs\"\n        />\n      </h2>\n    );\n  }\n  return (\n    <div\n      css={{\n        display: 'flex',\n        flexDirection: 'row',\n        height: '100vh',\n      }}\n    >\n      <div\n        css={{\n          backgroundColor: theme.colors.backgroundPrimary,\n          color: theme.colors.textPrimary,\n          flex: '1 1 0%',\n          whiteSpace: 'nowrap',\n          border: `1px solid ${theme.colors.grey300}`,\n          overflowY: 'auto',\n        }}\n      >\n        <ArtifactViewTree\n          data={commonArtifacts.map((path: string) => ({\n            id: path,\n            active: artifactPath === path,\n            name: getBasename(path),\n          }))}\n          onToggleTreebeard={({ id }) => setArtifactPath(id)}\n        />\n      </div>\n      <div\n        css={{\n          border: `1px solid ${theme.colors.grey300}`,\n          borderLeft: 'none',\n          display: 'flex',\n          flexDirection: 'column',\n          overflow: 'hidden',\n        }}\n      >\n        <div css={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\n          {runUuids.map((runUuid, index) => (\n            <div\n              key={runUuid}\n              style={{\n                width: `${colWidth}px`,\n                borderBottom: `1px solid ${theme.colors.grey300}`,\n                padding: !artifactPath ? theme.spacing.md : 0,\n                overflow: 'auto',\n                whiteSpace: 'nowrap',\n              }}\n            >\n              <ShowArtifactPage\n                runUuid={runUuid}\n                artifactRootUri={runInfos[index].artifactUri}\n                path={artifactPath}\n                experimentId={runInfos[index].experimentId}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { ArtifactFileInfo, ArtifactListFilesResponse } from '../../../types';\n\n/**\n * Gets the list of artifacts that are present in all runs in the given list of runs.\n * @param artifactsKeyedByRun Object containing artifacts keyed by run UUID\n * @returns List of common artifacts\n */\nexport const getCommonArtifacts = (artifactsKeyedByRun: Record<string, ArtifactListFilesResponse>) => {\n  const runUuids = Object.keys(artifactsKeyedByRun);\n\n  if (runUuids.length === 0) return [];\n\n  let commonArtifacts = artifactsKeyedByRun[runUuids[0]]?.files\n    ?.map((file: ArtifactFileInfo) => (file.is_dir ? null : file.path))\n    ?.filter((path: string | null) => path !== null);\n\n  if (!commonArtifacts || commonArtifacts.length === 0) return [];\n\n  for (let i = 1; i < runUuids.length; i++) {\n    const currentRunArtifacts = artifactsKeyedByRun[runUuids[i]]?.files?.map((file: any) => file.path);\n    commonArtifacts = commonArtifacts?.filter((path: any) => currentRunArtifacts.includes(path));\n    if (commonArtifacts.length === 0) {\n      break;\n    }\n  }\n\n  return commonArtifacts;\n};\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl, FormattedMessage, type IntlShape } from 'react-intl';\nimport { Spacer, Switch, LegacyTabs, LegacyTooltip } from '@databricks/design-system';\n\nimport { getExperiment, getParams, getRunInfo, getRunTags } from '../reducers/Reducers';\nimport './CompareRunView.css';\nimport { CompareRunScatter } from './CompareRunScatter';\nimport { CompareRunBox } from './CompareRunBox';\nimport CompareRunContour from './CompareRunContour';\nimport Routes from '../routes';\nimport { Link } from '../../common/utils/RoutingUtils';\nimport { getLatestMetrics } from '../reducers/MetricReducer';\nimport CompareRunUtil from './CompareRunUtil';\nimport Utils from '../../common/utils/Utils';\nimport ParallelCoordinatesPlotPanel from './ParallelCoordinatesPlotPanel';\nimport { PageHeader } from '../../shared/building_blocks/PageHeader';\nimport { CollapsibleSection } from '../../common/components/CollapsibleSection';\nimport { RunInfoEntity } from '../types';\nimport { CompareRunArtifactView } from './CompareRunArtifactView';\n\nconst { TabPane } = LegacyTabs;\n\ntype CompareRunViewProps = {\n  experiments: any[]; // TODO: PropTypes.instanceOf(Experiment)\n  experimentIds: string[];\n  comparedExperimentIds?: string[];\n  hasComparedExperimentsBefore?: boolean;\n  runInfos: RunInfoEntity[];\n  runUuids: string[];\n  metricLists: any[][];\n  paramLists: any[][];\n  tagLists: any[][];\n  runNames: string[];\n  runDisplayNames: string[];\n  intl: IntlShape;\n};\n\ntype CompareRunViewState = any;\nclass CompareRunView extends Component<CompareRunViewProps, CompareRunViewState> {\n  compareRunViewRef: any;\n  runDetailsTableRef: any;\n\n  constructor(props: CompareRunViewProps) {\n    super(props);\n    this.state = {\n      tableWidth: null,\n      onlyShowParamDiff: false,\n      onlyShowTagDiff: false,\n      onlyShowMetricDiff: false,\n    };\n    this.onResizeHandler = this.onResizeHandler.bind(this);\n    this.onCompareRunTableScrollHandler = this.onCompareRunTableScrollHandler.bind(this);\n\n    this.runDetailsTableRef = React.createRef();\n    this.compareRunViewRef = React.createRef();\n  }\n\n  onResizeHandler(e: any) {\n    const table = this.runDetailsTableRef.current;\n    if (table !== null) {\n      const containerWidth = table.clientWidth;\n      this.setState({ tableWidth: containerWidth });\n    }\n  }\n\n  onCompareRunTableScrollHandler(e: any) {\n    const blocks = this.compareRunViewRef.current.querySelectorAll('.mlflow-compare-run-table');\n    blocks.forEach((_: any, index: any) => {\n      const block = blocks[index];\n      if (block !== e.target) {\n        block.scrollLeft = e.target.scrollLeft;\n      }\n    });\n  }\n\n  componentDidMount() {\n    const pageTitle = this.props.intl.formatMessage(\n      {\n        description: 'Page title for the compare runs page',\n        defaultMessage: 'Comparing {runs} MLflow Runs',\n      },\n      {\n        runs: this.props.runInfos.length,\n      },\n    );\n    Utils.updatePageTitle(pageTitle);\n\n    window.addEventListener('resize', this.onResizeHandler, true);\n    window.dispatchEvent(new Event('resize'));\n  }\n\n  componentWillUnmount() {\n    // Avoid registering `onResizeHandler` every time this component mounts\n    window.removeEventListener('resize', this.onResizeHandler, true);\n  }\n\n  getTableColumnWidth() {\n    const minColWidth = 200;\n    let colWidth = minColWidth;\n\n    // @ts-expect-error TS(4111): Property 'tableWidth' comes from an index signatur... Remove this comment to see the full error message\n    if (this.state.tableWidth !== null) {\n      // @ts-expect-error TS(4111): Property 'tableWidth' comes from an index signatur... Remove this comment to see the full error message\n      colWidth = Math.round(this.state.tableWidth / (this.props.runInfos.length + 1));\n      if (colWidth < minColWidth) {\n        colWidth = minColWidth;\n      }\n    }\n    return colWidth;\n  }\n\n  renderExperimentNameRowItems() {\n    const { experiments } = this.props;\n    const experimentNameMap = Utils.getExperimentNameMap(Utils.sortExperimentsById(experiments));\n    return this.props.runInfos.map(({ experimentId, runUuid }) => {\n      // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      const { name, basename } = experimentNameMap[experimentId];\n      return (\n        <td className=\"meta-info\" key={runUuid}>\n          <Link to={Routes.getExperimentPageRoute(experimentId)} title={name}>\n            {basename}\n          </Link>\n        </td>\n      );\n    });\n  }\n\n  hasMultipleExperiments() {\n    return this.props.experimentIds.length > 1;\n  }\n\n  shouldShowExperimentNameRow() {\n    return this.props.hasComparedExperimentsBefore || this.hasMultipleExperiments();\n  }\n\n  getExperimentPageLink(experimentId: any, experimentName: any) {\n    return <Link to={Routes.getExperimentPageRoute(experimentId)}>{experimentName}</Link>;\n  }\n\n  getCompareExperimentsPageLinkText(numExperiments: any) {\n    return (\n      <FormattedMessage\n        defaultMessage=\"Displaying Runs from {numExperiments} Experiments\"\n        // eslint-disable-next-line max-len\n        description=\"Breadcrumb nav item to link to compare-experiments page on compare runs page\"\n        values={{ numExperiments }}\n      />\n    );\n  }\n\n  getCompareExperimentsPageLink(experimentIds: any) {\n    return (\n      <Link to={Routes.getCompareExperimentsPageRoute(experimentIds)}>\n        {this.getCompareExperimentsPageLinkText(experimentIds.length)}\n      </Link>\n    );\n  }\n\n  getExperimentLink() {\n    const { comparedExperimentIds, hasComparedExperimentsBefore, experimentIds, experiments } = this.props;\n\n    // Do not attempt to construct experiment links if they are not loaded\n    if (!experimentIds[0] || !experiments[0]) {\n      return '';\n    }\n\n    if (hasComparedExperimentsBefore) {\n      return this.getCompareExperimentsPageLink(comparedExperimentIds);\n    }\n\n    if (this.hasMultipleExperiments()) {\n      return this.getCompareExperimentsPageLink(experimentIds);\n    }\n\n    return this.getExperimentPageLink(experimentIds[0], experiments[0].name);\n  }\n\n  getTitle() {\n    return this.hasMultipleExperiments() ? (\n      <FormattedMessage\n        defaultMessage=\"Comparing {numRuns} Runs from {numExperiments} Experiments\"\n        // eslint-disable-next-line max-len\n        description=\"Breadcrumb title for compare runs page with multiple experiments\"\n        values={{\n          numRuns: this.props.runInfos.length,\n          numExperiments: this.props.experimentIds.length,\n        }}\n      />\n    ) : (\n      <FormattedMessage\n        defaultMessage=\"Comparing {numRuns} Runs from 1 Experiment\"\n        description=\"Breadcrumb title for compare runs page with single experiment\"\n        values={{\n          numRuns: this.props.runInfos.length,\n        }}\n      />\n    );\n  }\n\n  renderParamTable(colWidth: any) {\n    const dataRows = this.renderDataRows(\n      this.props.paramLists,\n      colWidth,\n      // @ts-expect-error TS(4111): Property 'onlyShowParamDiff' comes from an index s... Remove this comment to see the full error message\n      this.state.onlyShowParamDiff,\n      true,\n      (key: any, data: any) => key,\n      (value) => {\n        try {\n          const jsonValue = parsePythonDictString(value);\n\n          // Pretty print if parsed value is an object or array\n          if (typeof jsonValue === 'object' && jsonValue !== null) {\n            return this.renderPrettyJson(jsonValue);\n          } else {\n            return value;\n          }\n        } catch (e) {\n          return value;\n        }\n      },\n    );\n    if (dataRows.length === 0) {\n      return (\n        <h2>\n          <FormattedMessage\n            defaultMessage=\"No parameters to display.\"\n            description=\"Text shown when there are no parameters to display\"\n          />\n        </h2>\n      );\n    }\n    return (\n      <table\n        className=\"table mlflow-compare-table mlflow-compare-run-table\"\n        css={{ maxHeight: '500px' }}\n        onScroll={this.onCompareRunTableScrollHandler}\n      >\n        <tbody>{dataRows}</tbody>\n      </table>\n    );\n  }\n\n  renderPrettyJson(jsonValue: any) {\n    return <pre>{JSON.stringify(jsonValue, null, 2)}</pre>;\n  }\n\n  renderMetricTable(colWidth: any, experimentIds: any) {\n    const dataRows = this.renderDataRows(\n      this.props.metricLists,\n      colWidth,\n      // @ts-expect-error TS(4111): Property 'onlyShowMetricDiff' comes from an index ... Remove this comment to see the full error message\n      this.state.onlyShowMetricDiff,\n      false,\n      (key, data) => {\n        return (\n          <Link\n            to={Routes.getMetricPageRoute(\n              this.props.runInfos.map((info) => info.runUuid).filter((uuid, idx) => data[idx] !== undefined),\n              key,\n              experimentIds,\n            )}\n            title=\"Plot chart\"\n          >\n            {key}\n            <i className=\"fa fa-chart-line\" css={{ paddingLeft: '6px' }} />\n          </Link>\n        );\n      },\n      Utils.formatMetric,\n    );\n    if (dataRows.length === 0) {\n      return (\n        <h2>\n          <FormattedMessage\n            defaultMessage=\"No metrics to display.\"\n            description=\"Text shown when there are no metrics to display\"\n          />\n        </h2>\n      );\n    }\n    return (\n      <table\n        className=\"table mlflow-compare-table mlflow-compare-run-table\"\n        css={{ maxHeight: '300px' }}\n        onScroll={this.onCompareRunTableScrollHandler}\n      >\n        <tbody>{dataRows}</tbody>\n      </table>\n    );\n  }\n\n  renderArtifactTable(colWidth: any) {\n    return <CompareRunArtifactView runUuids={this.props.runUuids} runInfos={this.props.runInfos} colWidth={colWidth} />;\n  }\n\n  renderTagTable(colWidth: any) {\n    const dataRows = this.renderDataRows(\n      this.props.tagLists,\n      colWidth,\n      // @ts-expect-error TS(4111): Property 'onlyShowTagDiff' comes from an index sig... Remove this comment to see the full error message\n      this.state.onlyShowTagDiff,\n      true,\n    );\n    if (dataRows.length === 0) {\n      return (\n        <h2>\n          <FormattedMessage\n            defaultMessage=\"No tags to display.\"\n            description=\"Text shown when there are no tags to display\"\n          />\n        </h2>\n      );\n    }\n    return (\n      <table\n        className=\"table mlflow-compare-table mlflow-compare-run-table\"\n        css={{ maxHeight: '500px' }}\n        onScroll={this.onCompareRunTableScrollHandler}\n      >\n        <tbody>{dataRows}</tbody>\n      </table>\n    );\n  }\n\n  renderTimeRows(colWidthStyle: any) {\n    const unknown = (\n      <FormattedMessage\n        defaultMessage=\"(unknown)\"\n        description=\"Filler text when run's time information is unavailable\"\n      />\n    );\n    const getTimeAttributes = (runInfo: RunInfoEntity) => {\n      const startTime = runInfo.startTime;\n      const endTime = runInfo.endTime;\n      return {\n        runUuid: runInfo.runUuid,\n        startTime: startTime ? Utils.formatTimestamp(startTime, this.props.intl) : unknown,\n        endTime: endTime ? Utils.formatTimestamp(endTime, this.props.intl) : unknown,\n        duration: startTime && endTime ? Utils.getDuration(startTime, endTime) : unknown,\n      };\n    };\n    const timeAttributes = this.props.runInfos.map(getTimeAttributes);\n    const rows = [\n      {\n        key: 'startTime',\n        title: (\n          <FormattedMessage\n            defaultMessage=\"Start Time:\"\n            description=\"Row title for the start time of runs on the experiment compare runs page\"\n          />\n        ),\n        data: timeAttributes.map(({ runUuid, startTime }) => [runUuid, startTime]),\n      },\n      {\n        key: 'endTime',\n        title: (\n          <FormattedMessage\n            defaultMessage=\"End Time:\"\n            description=\"Row title for the end time of runs on the experiment compare runs page\"\n          />\n        ),\n        data: timeAttributes.map(({ runUuid, endTime }) => [runUuid, endTime]),\n      },\n      {\n        key: 'duration',\n        title: (\n          <FormattedMessage\n            defaultMessage=\"Duration:\"\n            description=\"Row title for the duration of runs on the experiment compare runs page\"\n          />\n        ),\n        data: timeAttributes.map(({ runUuid, duration }) => [runUuid, duration]),\n      },\n    ];\n    return rows.map(({ key, title, data }) => (\n      <tr key={key}>\n        <th scope=\"row\" className=\"head-value mlflow-sticky-header\" css={colWidthStyle}>\n          {title}\n        </th>\n        {data.map(([runUuid, value]) => (\n          <td className=\"data-value\" key={runUuid as string} css={colWidthStyle}>\n            <LegacyTooltip\n              title={value}\n              // @ts-expect-error TS(2322): Type '{ children: any; title: any; color: string; ... Remove this comment to see the full error message\n              color=\"gray\"\n              placement=\"topLeft\"\n              overlayStyle={{ maxWidth: '400px' }}\n              // mouseEnterDelay prop is not available in DuBois design system (yet)\n              dangerouslySetAntdProps={{ mouseEnterDelay: 1 }}\n            >\n              {value}\n            </LegacyTooltip>\n          </td>\n        ))}\n      </tr>\n    ));\n  }\n\n  render() {\n    const { experimentIds } = this.props;\n    const { runInfos, runNames, paramLists, metricLists, runUuids } = this.props;\n\n    const colWidth = this.getTableColumnWidth();\n    const colWidthStyle = this.genWidthStyle(colWidth);\n\n    const title = this.getTitle();\n    /* eslint-disable-next-line prefer-const */\n    let breadcrumbs = [this.getExperimentLink()];\n\n    const paramsLabel = this.props.intl.formatMessage({\n      defaultMessage: 'Parameters',\n      description: 'Row group title for parameters of runs on the experiment compare runs page',\n    });\n\n    const metricsLabel = this.props.intl.formatMessage({\n      defaultMessage: 'Metrics',\n      description: 'Row group title for metrics of runs on the experiment compare runs page',\n    });\n\n    const artifactsLabel = this.props.intl.formatMessage({\n      defaultMessage: 'Artifacts',\n      description: 'Row group title for artifacts of runs on the experiment compare runs page',\n    });\n\n    const tagsLabel = this.props.intl.formatMessage({\n      defaultMessage: 'Tags',\n      description: 'Row group title for tags of runs on the experiment compare runs page',\n    });\n    const diffOnlyLabel = this.props.intl.formatMessage({\n      defaultMessage: 'Show diff only',\n      description:\n        // eslint-disable-next-line max-len\n        'Label next to the switch that controls displaying only differing values in comparision tables on the compare runs page',\n    });\n\n    return (\n      <div className=\"CompareRunView\" ref={this.compareRunViewRef}>\n        <PageHeader title={title} breadcrumbs={breadcrumbs} spacerSize=\"xs\" />\n        <CollapsibleSection\n          title={this.props.intl.formatMessage({\n            defaultMessage: 'Run details',\n            description: 'Compare table title on the compare runs page',\n          })}\n        >\n          <table\n            className=\"table mlflow-compare-table mlflow-compare-run-table\"\n            ref={this.runDetailsTableRef}\n            onScroll={this.onCompareRunTableScrollHandler}\n          >\n            <thead>\n              <tr>\n                <th scope=\"row\" className=\"head-value mlflow-sticky-header\" css={colWidthStyle}>\n                  <FormattedMessage\n                    defaultMessage=\"Run ID:\"\n                    description=\"Row title for the run id on the experiment compare runs page\"\n                  />\n                </th>\n                {this.props.runInfos.map((r) => (\n                  <th scope=\"row\" className=\"data-value\" key={r.runUuid} css={colWidthStyle}>\n                    <LegacyTooltip\n                      title={r.runUuid}\n                      // @ts-expect-error TS(2322): Type '{ children: Element; title: any; color: stri... Remove this comment to see the full error message\n                      color=\"gray\"\n                      placement=\"topLeft\"\n                      overlayStyle={{ maxWidth: '400px' }}\n                      mouseEnterDelay={1.0}\n                    >\n                      <Link to={Routes.getRunPageRoute(r.experimentId ?? '0', r.runUuid ?? '')}>{r.runUuid}</Link>\n                    </LegacyTooltip>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <th scope=\"row\" className=\"head-value mlflow-sticky-header\" css={colWidthStyle}>\n                  <FormattedMessage\n                    defaultMessage=\"Run Name:\"\n                    description=\"Row title for the run name on the experiment compare runs page\"\n                  />\n                </th>\n                {runNames.map((runName, i) => {\n                  return (\n                    <td className=\"data-value\" key={runInfos[i].runUuid} css={colWidthStyle}>\n                      <div className=\"truncate-text single-line\">\n                        <LegacyTooltip\n                          title={runName}\n                          // @ts-expect-error TS(2322): Type '{ children: string; title: string; color: st... Remove this comment to see the full error message\n                          color=\"gray\"\n                          placement=\"topLeft\"\n                          overlayStyle={{ maxWidth: '400px' }}\n                          mouseEnterDelay={1.0}\n                        >\n                          {runName}\n                        </LegacyTooltip>\n                      </div>\n                    </td>\n                  );\n                })}\n              </tr>\n              {this.renderTimeRows(colWidthStyle)}\n              {this.shouldShowExperimentNameRow() && (\n                <tr>\n                  <th scope=\"row\" className=\"data-value\">\n                    <FormattedMessage\n                      defaultMessage=\"Experiment Name:\"\n                      // eslint-disable-next-line max-len\n                      description=\"Row title for the experiment IDs of runs on the experiment compare runs page\"\n                    />\n                  </th>\n                  {this.renderExperimentNameRowItems()}\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </CollapsibleSection>\n        <CollapsibleSection title={paramsLabel}>\n          <Switch\n            componentId=\"codegen_mlflow_app_src_experiment-tracking_components_comparerunview.tsx_570\"\n            label={diffOnlyLabel}\n            aria-label={[paramsLabel, diffOnlyLabel].join(' - ')}\n            // @ts-expect-error TS(4111): Property 'onlyShowParamDiff' comes from an index s... Remove this comment to see the full error message\n            checked={this.state.onlyShowParamDiff}\n            onChange={(checked, e) => this.setState({ onlyShowParamDiff: checked })}\n          />\n          <Spacer size=\"lg\" />\n          {this.renderParamTable(colWidth)}\n        </CollapsibleSection>\n        <CollapsibleSection title={metricsLabel}>\n          <Switch\n            componentId=\"codegen_mlflow_app_src_experiment-tracking_components_comparerunview.tsx_581\"\n            label={diffOnlyLabel}\n            aria-label={[metricsLabel, diffOnlyLabel].join(' - ')}\n            // @ts-expect-error TS(4111): Property 'onlyShowMetricDiff' comes from an index ... Remove this comment to see the full error message\n            checked={this.state.onlyShowMetricDiff}\n            onChange={(checked, e) => this.setState({ onlyShowMetricDiff: checked })}\n          />\n          <Spacer size=\"lg\" />\n          {this.renderMetricTable(colWidth, experimentIds)}\n        </CollapsibleSection>\n        <CollapsibleSection title={artifactsLabel}>{this.renderArtifactTable(colWidth)}</CollapsibleSection>\n        <CollapsibleSection title={tagsLabel}>\n          <Switch\n            componentId=\"codegen_mlflow_app_src_experiment-tracking_components_comparerunview.tsx_592\"\n            label={diffOnlyLabel}\n            aria-label={[tagsLabel, diffOnlyLabel].join(' - ')}\n            // @ts-expect-error TS(4111): Property 'onlyShowTagDiff' comes from an index sig... Remove this comment to see the full error message\n            checked={this.state.onlyShowTagDiff}\n            onChange={(checked, e) => this.setState({ onlyShowTagDiff: checked })}\n          />\n          <Spacer size=\"lg\" />\n          {this.renderTagTable(colWidth)}\n        </CollapsibleSection>\n      </div>\n    );\n  }\n\n  genWidthStyle(width: any) {\n    return {\n      width: `${width}px`,\n      minWidth: `${width}px`,\n      maxWidth: `${width}px`,\n    };\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  renderDataRows(\n    list: any,\n    colWidth: any,\n    onlyShowDiff: any,\n    highlightDiff = false,\n    headerMap = (key: any, data: any) => key,\n    formatter = (value: any) => value,\n  ) {\n    // @ts-expect-error TS(2554): Expected 2 arguments, but got 1.\n    const keys = CompareRunUtil.getKeys(list);\n    const data = {};\n    const checkHasDiff = (values: any) => values.some((x: any) => x !== values[0]);\n    // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    keys.forEach((k) => (data[k] = { values: Array(list.length).fill(undefined) }));\n    list.forEach((records: any, i: any) => {\n      // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      records.forEach((r: any) => (data[r.key].values[i] = r.value));\n    });\n    // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    keys.forEach((k) => (data[k].hasDiff = checkHasDiff(data[k].values)));\n\n    const colWidthStyle = this.genWidthStyle(colWidth);\n\n    return (\n      keys\n        // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n        .filter((k) => !onlyShowDiff || data[k].hasDiff)\n        .map((k) => {\n          // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n          const { values, hasDiff } = data[k];\n          const rowClass = highlightDiff && hasDiff ? 'diff-row' : undefined;\n          return (\n            <tr key={k} className={rowClass}>\n              <th scope=\"row\" className=\"head-value mlflow-sticky-header\" css={colWidthStyle}>\n                {headerMap(k, values)}\n              </th>\n              {values.map((value: any, i: any) => {\n                const cellText = value === undefined ? '' : formatter(value);\n                return (\n                  <td className=\"data-value\" key={this.props.runInfos[i].runUuid} css={colWidthStyle}>\n                    <LegacyTooltip\n                      title={cellText}\n                      // @ts-expect-error TS(2322): Type '{ children: Element; title: any; color: stri... Remove this comment to see the full error message\n                      color=\"gray\"\n                      placement=\"topLeft\"\n                      overlayStyle={{ maxWidth: '400px' }}\n                      mouseEnterDelay={1.0}\n                    >\n                      <span className=\"truncate-text single-line\">{cellText}</span>\n                    </LegacyTooltip>\n                  </td>\n                );\n              })}\n            </tr>\n          );\n        })\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => {\n  const { comparedExperimentIds, hasComparedExperimentsBefore } = state.compareExperiments;\n  const runInfos: any = [];\n  const metricLists: any = [];\n  const paramLists: any = [];\n  const tagLists: any = [];\n  const runNames: any = [];\n  const runDisplayNames: any = [];\n  const { experimentIds, runUuids } = ownProps;\n  const experiments = experimentIds.map((experimentId: any) => getExperiment(experimentId, state));\n  runUuids.forEach((runUuid: any) => {\n    const runInfo = getRunInfo(runUuid, state);\n    // Skip processing data if run info is not available yet\n    if (!runInfo) {\n      return;\n    }\n    runInfos.push(runInfo);\n    metricLists.push(Object.values(getLatestMetrics(runUuid, state)));\n    paramLists.push(Object.values(getParams(runUuid, state)));\n    const runTags = getRunTags(runUuid, state);\n    const visibleTags = Utils.getVisibleTagValues(runTags).map(([key, value]) => ({\n      key,\n      value,\n    }));\n    tagLists.push(visibleTags);\n    runDisplayNames.push(Utils.getRunDisplayName(runInfo, runUuid));\n    runNames.push(Utils.getRunName(runInfo));\n  });\n  return {\n    experiments,\n    runInfos,\n    metricLists,\n    paramLists,\n    tagLists,\n    runNames,\n    runDisplayNames,\n    comparedExperimentIds,\n    hasComparedExperimentsBefore,\n  };\n};\n\n/**\n * Parse a Python dictionary in string format into a JSON object.\n * @param value The Python dictionary string to parse\n * @returns The parsed JSON object, or null if parsing fails\n */\nconst parsePythonDictString = (value: string) => {\n  try {\n    const jsonString = value.replace(/'/g, '\"');\n    return JSON.parse(jsonString);\n  } catch (e) {\n    return null;\n  }\n};\n\nexport default connect(mapStateToProps)(injectIntl(CompareRunView));\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React, { Component } from 'react';\nimport qs from 'qs';\nimport { connect } from 'react-redux';\nimport { getRunApi, getExperimentApi } from '../actions';\nimport RequestStateWrapper from '../../common/components/RequestStateWrapper';\nimport CompareRunView from './CompareRunView';\nimport { getUUID } from '../../common/utils/ActionUtils';\nimport { PageContainer } from '../../common/components/PageContainer';\nimport { withRouterNext } from '../../common/utils/withRouterNext';\nimport type { WithRouterNextProps } from '../../common/utils/withRouterNext';\nimport { withErrorBoundary } from '../../common/utils/withErrorBoundary';\nimport ErrorUtils from '../../common/utils/ErrorUtils';\nimport { ErrorWrapper } from '../../common/utils/ErrorWrapper';\nimport { DangerIcon, Empty, Spinner } from '@databricks/design-system';\nimport { FormattedMessage } from 'react-intl';\nimport Utils from '../../common/utils/Utils';\nimport { FallbackProps } from 'react-error-boundary';\n\ntype CompareRunPageProps = {\n  experimentIds: string[];\n  runUuids: string[];\n  urlDecodeError?: boolean;\n  dispatch: (...args: any[]) => any;\n};\n\nclass CompareRunPageImpl extends Component<CompareRunPageProps> {\n  requestIds: any;\n\n  constructor(props: CompareRunPageProps) {\n    super(props);\n    this.requestIds = [];\n  }\n\n  state: {\n    requestError?: Error | ErrorWrapper;\n  } = {\n    requestError: undefined,\n  };\n\n  fetchExperiments() {\n    return this.props.experimentIds.map((experimentId) => {\n      const experimentRequestId = getUUID();\n      this.props\n        .dispatch(getExperimentApi(experimentId, experimentRequestId))\n        .catch((requestError: Error | ErrorWrapper) => this.setState({ requestError }));\n      return experimentRequestId;\n    });\n  }\n\n  componentDidMount() {\n    this.requestIds.push(...this.fetchExperiments());\n    this.props.runUuids.forEach((runUuid) => {\n      const requestId = getUUID();\n      this.requestIds.push(requestId);\n\n      this.props.dispatch(getRunApi(runUuid, requestId)).catch((requestError: Error | ErrorWrapper) => {\n        this.setState({ requestError });\n      });\n    });\n  }\n\n  render() {\n    // If the error is set, throw it to be caught by the error boundary\n    if (this.state.requestError) {\n      const { requestError } = this.state;\n      const errorToThrow = requestError instanceof Error ? requestError : new Error(requestError.getMessageField?.());\n      throw errorToThrow;\n    }\n    return (\n      <PageContainer>\n        <RequestStateWrapper\n          // We suppress throwing error by RequestStateWrapper since we handle it using component and error boundary\n          suppressErrorThrow\n          requestIds={this.requestIds}\n        >\n          <CompareRunView runUuids={this.props.runUuids} experimentIds={this.props.experimentIds} />\n        </RequestStateWrapper>\n      </PageContainer>\n    );\n  }\n}\n\n/**\n * When integrated via IFrame in Kubeflow it re-encodes the URI (sometimes multiple times), leading to an unparsable JSON.\n * This function decodes the URI until it is parsable.\n */\nconst decodeURI = (uri: string): string => {\n  const decodedURI = decodeURIComponent(uri);\n  if (uri !== decodedURI) {\n    return decodeURI(decodedURI);\n  }\n  return decodedURI;\n};\n\nconst mapStateToProps = (state: any, ownProps: WithRouterNextProps) => {\n  try {\n    const { location } = ownProps;\n    const locationSearchDecoded = decodeURI(location.search);\n    const searchValues = qs.parse(locationSearchDecoded);\n    // @ts-expect-error TS(2345): Argument of type 'string | string[] | ParsedQs | P... Remove this comment to see the full error message\n    const runUuids = JSON.parse(searchValues['?runs']);\n    // @ts-expect-error TS(2345): Argument of type 'string | string[] | ParsedQs | P... Remove this comment to see the full error message\n    const experimentIds = JSON.parse(searchValues['experiments']);\n    return { experimentIds, runUuids };\n  } catch (e) {\n    if (e instanceof SyntaxError) {\n      throw new SyntaxError(`Error while parsing URL: ${e.message}`);\n    }\n\n    throw e;\n  }\n};\n\nconst CompareRunPageErrorFallback = ({ error }: { error: Error }) => (\n  <div css={{ height: '100%', alignItems: 'center', justifyContent: 'center', display: 'flex' }}>\n    <Empty\n      title={\n        <FormattedMessage\n          defaultMessage=\"Error while loading compare runs page\"\n          description=\"Title of the error state on the run compare page\"\n        />\n      }\n      description={error.message}\n      image={<DangerIcon />}\n    />\n  </div>\n);\n\nconst CompareRunPage = withRouterNext(connect(mapStateToProps)(CompareRunPageImpl));\n\nexport default withErrorBoundary(\n  ErrorUtils.mlflowServices.RUN_TRACKING,\n  CompareRunPage,\n  undefined,\n  CompareRunPageErrorFallback,\n);\n","import React, { useCallback } from 'react';\nimport { SectionErrorBoundary } from './error-boundaries/SectionErrorBoundary';\nimport {\n  ChevronRightIcon,\n  useDesignSystemTheme,\n  Accordion,\n  DesignSystemThemeInterface,\n  importantify,\n} from '@databricks/design-system';\nimport { useIntl } from 'react-intl';\n\ninterface CollapsibleSectionProps {\n  title: string | any;\n  forceOpen?: boolean;\n  children: React.ReactNode;\n  showServerError?: boolean;\n  defaultCollapsed?: boolean;\n  onChange?: (key: string | string[]) => void;\n  className?: string;\n  componentId?: string;\n}\n\n// Custom styles to make <Accordion> look like previously used <Collapse> from antd\nconst getAccordionStyles = ({\n  theme,\n  getPrefixedClassName,\n}: Pick<DesignSystemThemeInterface, 'theme' | 'getPrefixedClassName'>) => {\n  const clsPrefix = getPrefixedClassName('collapse');\n\n  const classItem = `.${clsPrefix}-item`;\n  const classHeader = `.${clsPrefix}-header`;\n  const classContentBox = `.${clsPrefix}-content-box`;\n\n  return {\n    fontSize: 14,\n    [`& > ${classItem} > ${classHeader}`]: {\n      paddingLeft: 0,\n      paddingTop: 12,\n      paddingBottom: 12,\n      display: 'flex',\n      alignItems: 'center',\n      fontSize: 16,\n      fontWeight: 'normal',\n      lineHeight: theme.typography.lineHeightLg,\n    },\n    [classContentBox]: {\n      padding: `${theme.spacing.xs}px 0 ${theme.spacing.md}px 0`,\n    },\n  };\n};\n\nexport function CollapsibleSection(props: CollapsibleSectionProps) {\n  const {\n    title,\n    forceOpen,\n    showServerError,\n    defaultCollapsed,\n    onChange,\n    className,\n    componentId = 'mlflow.common.generic_collapsible_section',\n  } = props;\n\n  // We need to spread `activeKey` into <Collapse/> as an optional prop because its enumerability\n  // affects rendering, i.e. passing `activeKey={undefined}` is different from not passing activeKey\n  const activeKeyProp = forceOpen && { activeKey: ['1'] };\n  const defaultActiveKey = defaultCollapsed ? null : ['1'];\n\n  const { theme, getPrefixedClassName } = useDesignSystemTheme();\n  const { formatMessage } = useIntl();\n\n  const getExpandIcon = useCallback(\n    ({ isActive }: { isActive?: boolean }) => (\n      <div\n        css={importantify({ width: theme.general.heightBase / 2, transform: isActive ? 'rotate(90deg)' : undefined })}\n      >\n        <ChevronRightIcon\n          css={{\n            svg: { width: theme.general.heightBase / 2, height: theme.general.heightBase / 2 },\n          }}\n          aria-label={\n            isActive\n              ? formatMessage(\n                  {\n                    defaultMessage: 'collapse {title}',\n                    description: 'Common component > collapsible section > alternative label when expand',\n                  },\n                  { title },\n                )\n              : formatMessage(\n                  {\n                    defaultMessage: 'expand {title}',\n                    description: 'Common component > collapsible section > alternative label when collapsed',\n                  },\n                  { title },\n                )\n          }\n        />\n      </div>\n    ),\n    [theme, title, formatMessage],\n  );\n\n  return (\n    <Accordion\n      componentId={componentId}\n      {...activeKeyProp}\n      dangerouslyAppendEmotionCSS={getAccordionStyles({ theme, getPrefixedClassName })}\n      dangerouslySetAntdProps={{\n        className,\n        expandIconPosition: 'left',\n        expandIcon: getExpandIcon,\n      }}\n      defaultActiveKey={defaultActiveKey ?? undefined}\n      onChange={onChange}\n    >\n      <Accordion.Panel header={title} key=\"1\">\n        <SectionErrorBoundary showServerError={showServerError}>{props.children}</SectionErrorBoundary>\n      </Accordion.Panel>\n    </Accordion>\n  );\n}\n","/**\n * Adapted from `duotone-dark`\n * Ref: https://github.com/react-syntax-highlighter/react-syntax-highlighter/blob/b2457268891948f7005ccf539a70c000f0695bde/src/styles/prism/duotone-dark.js\n */\n\nconst databricksDuotoneDarkTheme = {\n  'code[class*=\"language-\"]': {\n    fontFamily:\n      'Consolas, Menlo, Monaco, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", \"Nimbus Mono L\", \"Courier New\", Courier, monospace',\n    fontSize: '14px',\n    lineHeight: '1.375',\n    direction: 'ltr',\n    textAlign: 'left',\n    whiteSpace: 'pre',\n    wordSpacing: 'normal',\n    wordBreak: 'normal',\n    MozTabSize: '4',\n    OTabSize: '4',\n    tabSize: '4',\n    WebkitHyphens: 'none',\n    MozHyphens: 'none',\n    msHyphens: 'none',\n    hyphens: 'none',\n    background: '#2a2734',\n    color: '#5DFAFC', // D\n  },\n  'pre[class*=\"language-\"]': {\n    fontFamily:\n      'Consolas, Menlo, Monaco, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", \"Nimbus Mono L\", \"Courier New\", Courier, monospace',\n    fontSize: '14px',\n    lineHeight: '1.375',\n    direction: 'ltr',\n    textAlign: 'left',\n    whiteSpace: 'pre',\n    wordSpacing: 'normal',\n    wordBreak: 'normal',\n    MozTabSize: '4',\n    OTabSize: '4',\n    tabSize: '4',\n    WebkitHyphens: 'none',\n    MozHyphens: 'none',\n    msHyphens: 'none',\n    hyphens: 'none',\n    background: '#2a2734',\n    color: '#5DFAFC', // D\n    padding: '1em',\n    margin: '.5em 0',\n    overflow: 'auto',\n  },\n  'pre > code[class*=\"language-\"]': {\n    fontSize: '1em',\n  },\n  'pre[class*=\"language-\"]::-moz-selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'pre[class*=\"language-\"] ::-moz-selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'code[class*=\"language-\"]::-moz-selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'code[class*=\"language-\"] ::-moz-selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'pre[class*=\"language-\"]::selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'pre[class*=\"language-\"] ::selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'code[class*=\"language-\"]::selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'code[class*=\"language-\"] ::selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  ':not(pre) > code[class*=\"language-\"]': {\n    padding: '.1em',\n    borderRadius: '.3em',\n  },\n  comment: {\n    color: '#6c6783',\n  },\n  prolog: {\n    color: '#6c6783',\n  },\n  doctype: {\n    color: '#6c6783',\n  },\n  cdata: {\n    color: '#6c6783',\n  },\n  punctuation: {\n    color: '#6c6783',\n  },\n  namespace: {\n    Opacity: '.7',\n  },\n  tag: {\n    color: '#3AACE2', // D\n  },\n  operator: {\n    color: '#3AACE2', // D\n  },\n  number: {\n    color: '#3AACE2', // D\n  },\n  property: {\n    color: '#5DFAFC', // D\n  },\n  function: {\n    color: '#5DFAFC', // D\n  },\n  'tag-id': {\n    color: '#eeebff',\n  },\n  selector: {\n    color: '#eeebff',\n  },\n  'atrule-id': {\n    color: '#eeebff',\n  },\n  'code.language-javascript': {\n    color: '#c4b9fe',\n  },\n  'attr-name': {\n    color: '#c4b9fe',\n  },\n  'code.language-css': {\n    color: '#ffffff', // D\n  },\n  'code.language-scss': {\n    color: '#ffffff', // D\n  },\n  boolean: {\n    color: '#ffffff', // D\n  },\n  string: {\n    color: '#ffffff', // D\n  },\n  entity: {\n    color: '#ffffff', // D\n    cursor: 'help',\n  },\n  url: {\n    color: '#ffffff', // D\n  },\n  '.language-css .token.string': {\n    color: '#ffffff', // D\n  },\n  '.language-scss .token.string': {\n    color: '#ffffff', // D\n  },\n  '.style .token.string': {\n    color: '#ffffff', // D\n  },\n  'attr-value': {\n    color: '#ffffff', // D\n  },\n  keyword: {\n    color: '#ffffff', // D\n  },\n  control: {\n    color: '#ffffff', // D\n  },\n  directive: {\n    color: '#ffffff', // D\n  },\n  unit: {\n    color: '#ffffff', // D\n  },\n  statement: {\n    color: '#ffffff', // D\n  },\n  regex: {\n    color: '#ffffff', // D\n  },\n  atrule: {\n    color: '#ffffff', // D\n  },\n  placeholder: {\n    color: '#ffffff', // D\n  },\n  variable: {\n    color: '#ffffff', // D\n  },\n  deleted: {\n    textDecoration: 'line-through',\n  },\n  inserted: {\n    borderBottom: '1px dotted #eeebff',\n    textDecoration: 'none',\n  },\n  italic: {\n    fontStyle: 'italic',\n  },\n  important: {\n    fontWeight: 'bold',\n    color: '#c4b9fe',\n  },\n  bold: {\n    fontWeight: 'bold',\n  },\n  'pre > code.highlight': {\n    Outline: '.4em solid #8a75f5',\n    OutlineOffset: '.4em',\n  },\n  '.line-numbers.line-numbers .line-numbers-rows': {\n    borderRightColor: '#2c2937',\n  },\n  '.line-numbers .line-numbers-rows > span:before': {\n    color: '#3c3949',\n  },\n  '.line-highlight.line-highlight': {\n    background: 'linear-gradient(to right, rgba(224, 145, 66, 0.2) 70%, rgba(224, 145, 66, 0))',\n  },\n};\n\nexport default databricksDuotoneDarkTheme;\n","/**\n * Adapted from `material-light`\n * Ref: https://github.com/react-syntax-highlighter/react-syntax-highlighter/blob/b2457268891948f7005ccf539a70c000f0695bde/src/styles/prism/material-light.js#L1\n *\n * This theme overwrites colors to be similiar to the `@databricks/editor` theme.\n */\n\nconst databricksLightTheme = {\n  'code[class*=\"language-\"]': {\n    textAlign: 'left',\n    whiteSpace: 'pre',\n    wordSpacing: 'normal',\n    wordBreak: 'normal',\n    wordWrap: 'normal',\n    color: 'rgb(77, 77, 76)', // D\n    background: '#fafafa',\n    fontFamily: 'Monaco, Menlo, Ubuntu Mono, Consolas, source-code-pro, monospace',\n    fontSize: '12px', // D\n    lineHeight: '1.5em',\n    MozTabSize: '4',\n    OTabSize: '4',\n    tabSize: '4',\n    WebkitHyphens: 'none',\n    MozHyphens: 'none',\n    msHyphens: 'none',\n    hyphens: 'none',\n  },\n  'pre[class*=\"language-\"]': {\n    textAlign: 'left',\n    whiteSpace: 'pre',\n    wordSpacing: 'normal',\n    wordBreak: 'normal',\n    wordWrap: 'normal',\n    color: 'rgb(77, 77, 76)', // D\n    background: '#fafafa',\n    fontFamily: 'Monaco, Menlo, Ubuntu Mono, Consolas, source-code-pro, monospace',\n    fontSize: '12px', // D\n    lineHeight: '1.5em',\n    MozTabSize: '4',\n    OTabSize: '4',\n    tabSize: '4',\n    WebkitHyphens: 'none',\n    MozHyphens: 'none',\n    msHyphens: 'none',\n    hyphens: 'none',\n    overflow: 'auto',\n    position: 'relative',\n    margin: '0.5em 0',\n    padding: '1.25em 1em',\n  },\n  'code[class*=\"language-\"]::-moz-selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'pre[class*=\"language-\"]::-moz-selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'code[class*=\"language-\"] ::-moz-selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'pre[class*=\"language-\"] ::-moz-selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'code[class*=\"language-\"]::selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'pre[class*=\"language-\"]::selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'code[class*=\"language-\"] ::selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'pre[class*=\"language-\"] ::selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  ':not(pre) > code[class*=\"language-\"]': {\n    whiteSpace: 'normal',\n    borderRadius: '0.2em',\n    padding: '0.1em',\n  },\n  '.language-css > code': {\n    color: '#f5871f', // D\n  },\n  '.language-sass > code': {\n    color: '#f5871f', // D\n  },\n  '.language-scss > code': {\n    color: '#f5871f', // D\n  },\n  '[class*=\"language-\"] .namespace': {\n    Opacity: '0.7',\n  },\n  atrule: {\n    color: '#7c4dff',\n  },\n  'attr-name': {\n    color: '#39adb5',\n  },\n  'attr-value': {\n    color: '#f6a434',\n  },\n  attribute: {\n    color: '#f6a434',\n  },\n  boolean: {\n    color: '#7c4dff', // D\n  },\n  builtin: {\n    color: '#39adb5',\n  },\n  cdata: {\n    color: '#39adb5',\n  },\n  char: {\n    color: '#39adb5',\n  },\n  class: {\n    color: '#39adb5',\n  },\n  'class-name': {\n    color: '#6182b8',\n  },\n  comment: {\n    color: '#8e908c', // D\n  },\n  constant: {\n    color: '#7c4dff', // D\n  },\n  deleted: {\n    color: '#e53935',\n  },\n  doctype: {\n    color: '#aabfc9',\n  },\n  entity: {\n    color: '#e53935',\n  },\n  function: {\n    color: '#4271ae', // D\n  },\n  hexcode: {\n    color: '#f5871f', // D\n  },\n  id: {\n    color: '#7c4dff',\n    fontWeight: 'bold',\n  },\n  important: {\n    color: '#7c4dff',\n    fontWeight: 'bold',\n  },\n  inserted: {\n    color: '#39adb5',\n  },\n  keyword: {\n    color: '#8959a8', // D\n  },\n  number: {\n    color: '#f5871f', // D\n  },\n  operator: {\n    color: '#3e999f', // D\n  },\n  prolog: {\n    color: '#aabfc9',\n  },\n  property: {\n    color: '#39adb5',\n  },\n  'pseudo-class': {\n    color: '#f6a434',\n  },\n  'pseudo-element': {\n    color: '#f6a434',\n  },\n  punctuation: {\n    color: 'rgb(77, 77, 76)', // D\n  },\n  regex: {\n    color: '#6182b8',\n  },\n  selector: {\n    color: '#e53935',\n  },\n  string: {\n    color: '#3ba85f', // D\n  },\n  symbol: {\n    color: '#7c4dff',\n  },\n  tag: {\n    color: '#e53935',\n  },\n  unit: {\n    color: '#f5871f', // D\n  },\n  url: {\n    color: '#e53935',\n  },\n  variable: {\n    color: '#c72d4c', // D\n  },\n};\n\nexport default databricksLightTheme;\n","import { css } from '@emotion/react';\nimport type { ReactNode } from 'react';\nimport React from 'react';\n\nimport type { ButtonProps } from '@databricks/design-system';\nimport { Button, LegacyTooltip } from '@databricks/design-system';\n\ntype SnippetActionButtonProps = Pick<ButtonProps, 'icon' | 'onClick' | 'href' | 'rel' | 'target'> & {\n  tooltipMessage: NonNullable<ReactNode>;\n};\n\nexport default function SnippetActionButton({ tooltipMessage, ...buttonProps }: SnippetActionButtonProps) {\n  const style = css({\n    zIndex: 1, // required for action buttons to be visible and float\n  });\n  return (\n    <LegacyTooltip title={tooltipMessage}>\n      <Button\n        componentId=\"codegen_web-shared_src_snippet_actions_snippetactionbutton.tsx_33\"\n        {...buttonProps}\n        css={style}\n      />\n    </LegacyTooltip>\n  );\n}\n","import React from 'react';\n\nimport type { ButtonProps } from '@databricks/design-system';\nimport { useCopyController } from '@databricks/web-shared/copy';\n\nimport SnippetActionButton from './SnippetActionButton';\n\nexport interface SnippetCopyActionProps extends ButtonProps {\n  /**\n   * The text to be copied into clipboard when action button is clicked.\n   */\n  copyText: string;\n  onClick?: (e: React.MouseEvent) => void;\n}\n\nexport function SnippetCopyAction({ copyText, onClick, ...props }: SnippetCopyActionProps) {\n  const { actionIcon, tooltipMessage, copy } = useCopyController(copyText);\n\n  return (\n    <SnippetActionButton\n      tooltipMessage={tooltipMessage}\n      icon={actionIcon}\n      onClick={(e) => {\n        copy();\n        onClick?.(e);\n      }}\n      {...props}\n    />\n  );\n}\n","import { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport go from 'react-syntax-highlighter/dist/cjs/languages/prism/go';\nimport java from 'react-syntax-highlighter/dist/cjs/languages/prism/java';\nimport javascript from 'react-syntax-highlighter/dist/cjs/languages/prism/javascript';\nimport json from 'react-syntax-highlighter/dist/cjs/languages/prism/json';\nimport python from 'react-syntax-highlighter/dist/cjs/languages/prism/python';\nimport yaml from 'react-syntax-highlighter/dist/cjs/languages/prism/yaml';\nimport sql from 'react-syntax-highlighter/dist/cjs/languages/prism/sql';\n\nSyntaxHighlighter.registerLanguage('sql', sql);\nSyntaxHighlighter.registerLanguage('java', java);\nSyntaxHighlighter.registerLanguage('python', python);\nSyntaxHighlighter.registerLanguage('go', go);\nSyntaxHighlighter.registerLanguage('javascript', javascript);\nSyntaxHighlighter.registerLanguage('yaml', yaml);\nSyntaxHighlighter.registerLanguage('json', json);\n\nimport duotoneDarkStyle from './theme/databricks-duotone-dark';\nimport lightStyle from './theme/databricks-light';\nimport { CSSProperties, ReactNode } from 'react';\nimport { pick } from 'lodash';\nexport type CodeSnippetTheme = 'duotoneDark' | 'light';\nexport const buttonBackgroundColorDark = 'rgba(140, 203, 255, 0)';\nexport const buttonColorDark = 'rgba(255, 255, 255, 0.84)';\nexport const buttonHoverColorDark = '#8ccbffcc';\nexport const buttonHoverBackgroundColorDark = 'rgba(140, 203, 255, 0.08)';\nexport const duboisAlertBackgroundColor = '#fff0f0';\nexport const snippetPadding = '24px';\nconst themesStyles: Record<CodeSnippetTheme, any> = {\n  light: lightStyle,\n  duotoneDark: duotoneDarkStyle,\n};\n\nexport type CodeSnippetLanguage = 'sql' | 'java' | 'python' | 'javascript' | 'go' | 'yaml' | 'text' | 'json';\n\nexport interface CodeSnippetProps {\n  /**\n   * The code string\n   */\n  children: string;\n  /**\n   * The actions that are displayed on the right top corner of the component\n   *  see `./actions` for built-in actions\n   */\n  actions?: NonNullable<ReactNode> | NonNullable<ReactNode>[];\n  /**\n   * The theme, default theme is `light`\n   */\n  theme?: CodeSnippetTheme;\n  /**\n   * Language of the code (`children`)\n   */\n  language: CodeSnippetLanguage;\n  /**\n   * Custom styles (passed to the internal `<pre>`)\n   */\n  style?: CSSProperties;\n  /**\n   * Whether to show line numbers on the left or not\n   */\n  showLineNumbers?: boolean;\n  /**\n   * Custom styles for line numbers\n   */\n  lineNumberStyle?: CSSProperties;\n  /**\n   * Boolean to specify whether to style the <code> block with white-space: pre-wrap or white-space: pre\n   */\n  wrapLongLines?: boolean;\n  /**\n   * Boolean that determines whether or not each line of code should be wrapped in a parent element\n   */\n  wrapLines?: boolean;\n  /**\n   * Props to pass to the line elements\n   */\n  lineProps?: React.HTMLProps<HTMLElement> | undefined;\n  /**\n   * Custom tag to use for the `<pre>` element\n   */\n  PreTag?: keyof JSX.IntrinsicElements | React.ComponentType<any> | undefined;\n}\n\n/**\n * `CodeSnippet` is used for highlighting code, use this instead of\n */\nexport function CodeSnippet({\n  theme = 'light',\n  language,\n  actions,\n  style,\n  children,\n  showLineNumbers,\n  lineNumberStyle,\n  wrapLongLines,\n  wrapLines,\n  PreTag,\n}: CodeSnippetProps) {\n  const customStyle = {\n    border: 'none',\n    borderRadius: 0,\n    margin: 0,\n    padding: snippetPadding,\n    ...style,\n  };\n  return (\n    <SyntaxHighlighter\n      showLineNumbers={showLineNumbers}\n      lineNumberStyle={lineNumberStyle}\n      language={language}\n      style={themesStyles[theme]}\n      customStyle={customStyle}\n      codeTagProps={{\n        style: pick(style, 'backgroundColor'),\n      }}\n      wrapLongLines={wrapLongLines}\n      wrapLines={wrapLines}\n      PreTag={PreTag}\n    >\n      {children}\n    </SyntaxHighlighter>\n  );\n}\n\nexport * from './actions/SnippetCopyAction';\n","import {\n  ArrowLeftIcon,\n  ArrowRightIcon,\n  CloseIcon,\n  DesignSystemContext,\n  RedoIcon,\n  UndoIcon,\n  ZoomInIcon,\n  ZoomOutIcon,\n} from '@databricks/design-system';\nimport { useContext } from 'react';\nimport RcImage from 'rc-image';\nimport './Image.css';\nimport { MLflowImagePreviewContainer } from '../../common/components/DesignSystemContainer';\n\nconst icons = {\n  rotateLeft: <UndoIcon />,\n  rotateRight: <RedoIcon />,\n  zoomIn: <ZoomInIcon />,\n  zoomOut: <ZoomOutIcon />,\n  close: <CloseIcon />,\n  left: <ArrowLeftIcon />,\n  right: <ArrowRightIcon />,\n};\n\nexport const ImagePreviewGroup = ({\n  children,\n  visible,\n  onVisibleChange,\n}: {\n  children: React.ReactNode;\n  visible: boolean;\n  onVisibleChange: (v: boolean) => void;\n}) => {\n  const { getImagePreviewPopupContainer } = useContext(MLflowImagePreviewContainer);\n\n  return (\n    <RcImage.PreviewGroup\n      icons={icons}\n      preview={{\n        visible: visible,\n        getContainer: getImagePreviewPopupContainer,\n        onVisibleChange: (v) => onVisibleChange(v),\n      }}\n    >\n      {children}\n    </RcImage.PreviewGroup>\n  );\n};\n\nexport { RcImage as Image };\n","import { ImageIcon, Spinner } from '@databricks/design-system';\nimport { useDesignSystemTheme } from '@databricks/design-system';\nimport { FormattedMessage } from 'react-intl';\nimport { getArtifactLocationUrl } from '@mlflow/mlflow/src/common/utils/ArtifactUtils';\nimport { ImageEntity } from '@mlflow/mlflow/src/experiment-tracking/types';\nimport { useState, useEffect } from 'react';\nimport { Typography } from '@databricks/design-system';\nimport { ImagePreviewGroup, Image } from '../../../../../shared/building_blocks/Image';\n\n/**\n * Despite image size being dynamic, we want to set a minimum size for the grid images.\n */\nexport const MIN_GRID_IMAGE_SIZE = 200;\n\ntype ImagePlotProps = {\n  imageUrl: string;\n  compressedImageUrl: string;\n  imageSize?: number;\n  maxImageSize?: number;\n};\n\nexport const ImagePlot = ({ imageUrl, compressedImageUrl, imageSize, maxImageSize }: ImagePlotProps) => {\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const { theme } = useDesignSystemTheme();\n\n  const [imageLoading, setImageLoading] = useState(true);\n\n  useEffect(() => {\n    // Load the image in the memory (should reuse the same request) in order to get the loading state\n    setImageLoading(true);\n    const img = new window.Image();\n    img.onload = () => setImageLoading(false);\n    img.onerror = () => setImageLoading(false);\n    img.src = compressedImageUrl;\n    return () => {\n      img.src = '';\n    };\n  }, [compressedImageUrl]);\n\n  return (\n    <div css={{ width: imageSize || '100%', height: imageSize || '100%' }}>\n      <div css={{ display: 'contents' }}>\n        {compressedImageUrl === undefined || imageLoading ? (\n          <div\n            css={{\n              width: '100%',\n              backgroundColor: theme.colors.backgroundSecondary,\n              display: 'flex',\n              aspectRatio: '1',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n          >\n            <Spinner />\n          </div>\n        ) : (\n          <div\n            css={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              width: imageSize || '100%',\n              aspectRatio: '1',\n              maxWidth: maxImageSize,\n              maxHeight: maxImageSize,\n              backgroundColor: theme.colors.backgroundSecondary,\n              '.rc-image': {\n                cursor: 'pointer',\n              },\n            }}\n          >\n            <ImagePreviewGroup visible={previewVisible} onVisibleChange={setPreviewVisible}>\n              <Image\n                src={compressedImageUrl}\n                preview={{ src: imageUrl }}\n                style={{ maxWidth: maxImageSize || '100%', maxHeight: maxImageSize || '100%' }}\n              />\n            </ImagePreviewGroup>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport const ImagePlotWithHistory = ({\n  metadataByStep,\n  imageSize,\n  step,\n  runUuid,\n}: {\n  metadataByStep: Record<number, ImageEntity>;\n  imageSize?: number;\n  step: number;\n  runUuid: string;\n}) => {\n  const { theme } = useDesignSystemTheme();\n\n  if (metadataByStep[step] === undefined) {\n    return (\n      <div\n        css={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          textAlign: 'center',\n          width: imageSize,\n          backgroundColor: theme.colors.backgroundSecondary,\n          padding: theme.spacing.md,\n          aspectRatio: '1',\n        }}\n      >\n        <ImageIcon />\n        <FormattedMessage\n          defaultMessage=\"No image logged at this step\"\n          description=\"Experiment tracking > runs charts > charts > image plot with history > no image text\"\n        />\n      </div>\n    );\n  }\n  return (\n    <ImagePlot\n      imageUrl={getArtifactLocationUrl(metadataByStep[step].filepath, runUuid)}\n      compressedImageUrl={getArtifactLocationUrl(metadataByStep[step].compressed_filepath, runUuid)}\n      imageSize={imageSize}\n    />\n  );\n};\n\nexport const EmptyImageGridPlot = () => {\n  return (\n    <div\n      css={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100%',\n        width: '100%',\n        fontSize: 16,\n      }}\n    >\n      <Typography.Title css={{ marginTop: 16 }} color=\"secondary\" level={3}>\n        Compare logged images\n      </Typography.Title>\n      <Typography.Text css={{ marginBottom: 16 }} color=\"secondary\">\n        Use the image grid chart to compare logged images across runs.\n      </Typography.Text>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Button, type ButtonProps, LegacyTooltip } from '@databricks/design-system';\n\ninterface CopyButtonProps extends Partial<ButtonProps> {\n  copyText: string;\n  showLabel?: React.ReactNode;\n  componentId?: string;\n}\n\nexport const CopyButton = ({ copyText, showLabel = true, componentId, ...buttonProps }: CopyButtonProps) => {\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  const handleClick = () => {\n    navigator.clipboard.writeText(copyText);\n    setShowTooltip(true);\n    setTimeout(() => {\n      setShowTooltip(false);\n    }, 3000);\n  };\n\n  const handleMouseLeave = () => {\n    setShowTooltip(false);\n  };\n\n  return (\n    <LegacyTooltip\n      title={\n        <FormattedMessage defaultMessage=\"Copied\" description=\"Tooltip text shown when copy operation completes\" />\n      }\n      dangerouslySetAntdProps={{\n        visible: showTooltip,\n      }}\n    >\n      <Button\n        componentId={componentId ?? 'mlflow.shared.copy_button'}\n        type=\"primary\"\n        onClick={handleClick}\n        onMouseLeave={handleMouseLeave}\n        css={{ 'z-index': 1 }}\n        // Define children as a explicit prop so it can be easily overrideable\n        children={\n          showLabel ? <FormattedMessage defaultMessage=\"Copy\" description=\"Button text for copy button\" /> : undefined\n        }\n        {...buttonProps}\n      />\n    </LegacyTooltip>\n  );\n};\n","import { identity, isFunction } from 'lodash';\nimport React from 'react';\n\n/**\n * A safe version of `useDeferredValue` that falls back to identity (A->A) if `useDeferredValue` is not supported\n * by current React version.\n */\nexport const useSafeDeferredValue: <T>(value: T) => T =\n  'useDeferredValue' in React && isFunction(React.useDeferredValue) ? React.useDeferredValue : identity;\n"],"names":["useCopyController","text","copyTooltip","onCopy","intl","useIntl","copyMessage","formatMessage","id","defaultMessage","copiedMessage","clipboard","useClipboard","copiedTimerIdRef","useRef","copied","setCopied","useState","open","setOpen","useEffect","window","clearTimeout","current","actionIcon","_jsx","CheckIcon","CopyIcon","tooltipMessage","copy","setTimeout","ariaLabel","tooltipOpen","handleTooltipOpenChange","CopyActionButton","buttonProps","componentId","copyText","isInsideInputGroup","tooltipProps","button","Button","icon","onClick","size","inputGroupButton","children","Tooltip","content","onOpenChange","useRunsArtifacts","runUuids","artifactsKeyedByRun","setArtifactsKeyedByRun","isLoading","setIsLoading","error","setError","length","async","artifactsByRun","Promise","all","map","response","listArtifactsApi","runUuid","artifacts","payload","err","fetchArtifacts","_ref","name","styles","_ref2","CompareRunArtifactView","runInfos","colWidth","theme","useDesignSystemTheme","artifactPath","setArtifactPath","commonArtifacts","_artifactsKeyedByRun$","_artifactsKeyedByRun$2","_artifactsKeyedByRun$3","Object","keys","files","file","is_dir","path","filter","i","_artifactsKeyedByRun$4","_artifactsKeyedByRun$5","_commonArtifacts","currentRunArtifacts","includes","getCommonArtifacts","FormattedMessage","_jsxs","css","_css","backgroundColor","colors","backgroundPrimary","color","textPrimary","flex","whiteSpace","border","grey300","overflowY","ArtifactViewTree","data","active","getBasename","onToggleTreebeard","borderLeft","display","flexDirection","overflow","index","style","width","borderBottom","padding","spacing","md","ShowArtifactPage","artifactRootUri","artifactUri","experimentId","TabPane","LegacyTabs","_ref3","_ref4","CompareRunView","Component","constructor","props","super","compareRunViewRef","runDetailsTableRef","this","state","tableWidth","onlyShowParamDiff","onlyShowTagDiff","onlyShowMetricDiff","onResizeHandler","bind","onCompareRunTableScrollHandler","React","e","table","containerWidth","clientWidth","setState","blocks","querySelectorAll","forEach","_","block","target","scrollLeft","componentDidMount","pageTitle","runs","Utils","updatePageTitle","addEventListener","dispatchEvent","Event","componentWillUnmount","removeEventListener","getTableColumnWidth","Math","round","renderExperimentNameRowItems","experiments","experimentNameMap","getExperimentNameMap","sortExperimentsById","basename","className","Link","to","Routes","getExperimentPageRoute","title","hasMultipleExperiments","experimentIds","shouldShowExperimentNameRow","hasComparedExperimentsBefore","getExperimentPageLink","experimentName","getCompareExperimentsPageLinkText","numExperiments","values","getCompareExperimentsPageLink","getCompareExperimentsPageRoute","getExperimentLink","comparedExperimentIds","getTitle","numRuns","renderParamTable","dataRows","renderDataRows","paramLists","key","value","jsonValue","parsePythonDictString","renderPrettyJson","onScroll","JSON","stringify","renderMetricTable","metricLists","getMetricPageRoute","info","uuid","idx","undefined","formatMetric","renderArtifactTable","renderTagTable","tagLists","renderTimeRows","colWidthStyle","unknown","timeAttributes","runInfo","startTime","endTime","formatTimestamp","duration","getDuration","scope","LegacyTooltip","placement","overlayStyle","maxWidth","dangerouslySetAntdProps","mouseEnterDelay","render","runNames","genWidthStyle","breadcrumbs","paramsLabel","metricsLabel","artifactsLabel","tagsLabel","diffOnlyLabel","ref","PageHeader","spacerSize","CollapsibleSection","r","_r$experimentId","_r$runUuid","getRunPageRoute","runName","Switch","label","join","checked","onChange","Spacer","minWidth","list","onlyShowDiff","highlightDiff","headerMap","formatter","CompareRunUtil","getKeys","k","Array","fill","records","hasDiff","some","x","rowClass","cellText","jsonString","replace","parse","connect","mapStateToProps","ownProps","compareExperiments","runDisplayNames","getExperiment","getRunInfo","push","getLatestMetrics","getParams","runTags","getRunTags","visibleTags","getVisibleTagValues","getRunDisplayName","getRunName","injectIntl","CompareRunPageImpl","requestIds","requestError","fetchExperiments","experimentRequestId","getUUID","dispatch","getExperimentApi","catch","requestId","getRunApi","_requestError$getMess","Error","getMessageField","call","PageContainer","RequestStateWrapper","suppressErrorThrow","decodeURI","uri","decodedURI","decodeURIComponent","CompareRunPage","withRouterNext","location","locationSearchDecoded","search","searchValues","qs","SyntaxError","message","withErrorBoundary","ErrorUtils","mlflowServices","RUN_TRACKING","CompareRunPageErrorFallback","Empty","description","image","DangerIcon","getAccordionStyles","getPrefixedClassName","clsPrefix","classItem","classHeader","classContentBox","fontSize","paddingLeft","paddingTop","paddingBottom","alignItems","fontWeight","lineHeight","typography","lineHeightLg","xs","forceOpen","showServerError","defaultCollapsed","activeKeyProp","activeKey","defaultActiveKey","getExpandIcon","useCallback","isActive","importantify","general","heightBase","transform","ChevronRightIcon","svg","height","Accordion","dangerouslyAppendEmotionCSS","expandIconPosition","expandIcon","Panel","header","SectionErrorBoundary","fontFamily","direction","textAlign","wordSpacing","wordBreak","MozTabSize","OTabSize","tabSize","WebkitHyphens","MozHyphens","msHyphens","hyphens","background","margin","textShadow","borderRadius","comment","prolog","doctype","cdata","punctuation","namespace","Opacity","tag","operator","number","property","function","selector","boolean","string","entity","cursor","url","keyword","control","directive","unit","statement","regex","atrule","placeholder","variable","deleted","textDecoration","inserted","italic","fontStyle","important","bold","Outline","OutlineOffset","borderRightColor","wordWrap","position","attribute","builtin","char","class","constant","hexcode","symbol","SnippetActionButton","SnippetCopyAction","SyntaxHighlighter","registerLanguage","sql","java","python","go","javascript","yaml","json","snippetPadding","themesStyles","light","lightStyle","duotoneDark","duotoneDarkStyle","CodeSnippet","language","actions","showLineNumbers","lineNumberStyle","wrapLongLines","wrapLines","PreTag","customStyle","codeTagProps","pick","icons","rotateLeft","UndoIcon","rotateRight","RedoIcon","zoomIn","ZoomInIcon","zoomOut","ZoomOutIcon","close","CloseIcon","left","ArrowLeftIcon","right","ArrowRightIcon","ImagePreviewGroup","visible","onVisibleChange","getImagePreviewPopupContainer","useContext","MLflowImagePreviewContainer","RcImage","PreviewGroup","preview","getContainer","v","MIN_GRID_IMAGE_SIZE","ImagePlot","imageUrl","compressedImageUrl","imageSize","maxImageSize","previewVisible","setPreviewVisible","imageLoading","setImageLoading","img","Image","onload","onerror","src","backgroundSecondary","aspectRatio","justifyContent","Spinner","maxHeight","ImagePlotWithHistory","metadataByStep","step","ImageIcon","getArtifactLocationUrl","filepath","compressed_filepath","EmptyImageGridPlot","Typography","Title","level","Text","CopyButton","showLabel","showTooltip","setShowTooltip","type","handleClick","navigator","writeText","onMouseLeave","handleMouseLeave","useSafeDeferredValue","isFunction","identity"],"sourceRoot":""}